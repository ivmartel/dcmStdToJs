{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://dcmStdToJs/./src/style.css","webpack://dcmStdToJs/./node_modules/css-loader/dist/runtime/api.js","webpack://dcmStdToJs/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://dcmStdToJs/webpack/bootstrap","webpack://dcmStdToJs/webpack/runtime/compat get default export","webpack://dcmStdToJs/webpack/runtime/define property getters","webpack://dcmStdToJs/webpack/runtime/hasOwnProperty shorthand","webpack://dcmStdToJs/webpack/runtime/nonce","webpack://dcmStdToJs/./src/parser.js","webpack://dcmStdToJs/./src/nema.js","webpack://dcmStdToJs/./src/gui.js","webpack://dcmStdToJs/./src/style.css?7163","webpack://dcmStdToJs/./src/index.js"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  font-family: Verdana, Arial, Helvetica, sans-serif;\n}\n\ninput[type=\"file\"] {\n  background: #efefef;\n}\n\n#output {\n  margin-top: 10px;\n}\n\n#output p {\n  margin-top: 10px;\n  margin-bottom: 0;\n  background: #efefef;\n  text-align: right;\n  font-size: small;\n}\n\n#output textarea {\n  width: 99%;\n}\n\n.error {\n  color: red;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kDAAkD;AACpD;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ\",\"sourcesContent\":[\"body {\\n  font-family: Verdana, Arial, Helvetica, sans-serif;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n  background: #efefef;\\n}\\n\\n#output {\\n  margin-top: 10px;\\n}\\n\\n#output p {\\n  margin-top: 10px;\\n  margin-bottom: 0;\\n  background: #efefef;\\n  text-align: right;\\n  font-size: small;\\n}\\n\\n#output textarea {\\n  width: 99%;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","/**\n * DICOM xml parser.\n */\nexport class DicomXMLParser {\n\n  /**\n   * Parse a DICOM standard xml node.\n   *\n   * @param {Node} partNode The main DOM node.\n   * @param {string} origin The origin of the node (optional).\n   * @returns {object} An object containing:\n   *   - name: a lael for the result,\n   *   - origin: the origin of the node,\n   *   - raw: the raw result,\n   *   - data: the adapted result as string.\n   */\n  parseNode(partNode, origin) {\n    // get book node\n    const book = partNode.querySelector('book');\n    if (!book) {\n      throw new Error('No book node.');\n    }\n    // get book label\n    const label = book.getAttribute('label');\n    if (!label) {\n      throw new Error('No book label.');\n    }\n\n    // get version\n    // 'DICOM PS3.5 2020a - ...'\n    const subtitle = book.querySelector('subtitle');\n    if (!subtitle) {\n      throw new Error('No book subtitle.');\n    }\n    const prefix = 'DICOM ' + label;\n    if (!subtitle.innerHTML.startsWith(prefix)) {\n      throw new Error('Missing DICOM standard version prefix.');\n    }\n    const endIndex = subtitle.innerHTML.indexOf('-');\n    const versionStr =\n      subtitle.innerHTML.substring(prefix.length, endIndex).trim();\n    const version = {\n      year: parseInt(versionStr.substring(0, 4), 10),\n      letter: versionStr.substring(4)\n    };\n\n\n    let result = null;\n\n    if (label === 'PS3.3') {\n      result = parsePs33Node(partNode, origin);\n    } else if (label === 'PS3.5') {\n      result = parsePs35Node(partNode, origin, version);\n    } else if (label === 'PS3.6') {\n      result = parsePs36Node(partNode, origin);\n    } else if (label === 'PS3.7') {\n      result = parsePs37Node(partNode, origin);\n    } else {\n      throw new Error('Unknown book label: ' + label);\n    }\n\n    return result;\n  }\n}\n\n/**\n * Parse a PS3.3 node: Information Object Definitions (IODs).\n * See: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part03/PS3.3.html}.\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs33Node(partNode, origin) {\n  const result = [];\n  // CT: https://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_A.3.3.html#table_A.3-1\n  const iodList = [\n    {name: 'CT Image', label: 'table_A.3-1'},\n    {name: 'MR Image', label: 'table_A.4-1'},\n    // {name: 'NM Image', label: 'table_A.5-1'},\n    // {name: 'US Image', label: 'table_A.6-1'},\n    // {name: 'PET Image', label: 'table_A.21.3-1'},\n    // {\n    //   name: 'Segmentation',\n    //   label: 'table_A.51-1',\n    //   fgLabel: 'table_A.51-2'\n    // }\n  ];\n\n  for (const iod of iodList) {\n    const usageRegex = /M|C/g;\n    let fgModulesProperties = null;\n    // functional group modules\n    if (typeof iod.fgLabel !== 'undefined') {\n      const fgModulesDefs = parseModuleListNode(\n        partNode.querySelector(getSelector(iod.fgLabel)),\n        partNode,\n        iod.name + ' Functional Group Macros',\n        usageRegex\n      );\n      fgModulesProperties =\n        parseModulesFromList(fgModulesDefs, partNode);\n    }\n    // IOD modules\n    const iodModulesDefs = parseModuleListNode(\n      partNode.querySelector(getSelector(iod.label)),\n      partNode,\n      iod.name + ' IOD Modules',\n      usageRegex\n    );\n    const modulesProperties = parseModulesFromList(\n      iodModulesDefs, partNode, fgModulesProperties);\n\n    const typeRegex = /1|1C/g;\n    const modules = modulePropertiesListToObject(\n      modulesProperties, typeRegex);\n\n    result.push({\n      name: iod.name + ' IOD Modules',\n      origin: origin,\n      raw: modules,\n      data: JSON.stringify(modules, null, '  ')\n    });\n  }\n  return result;\n}\n\n/**\n * Parse a PS3.5 node: Data Structures and Encoding.\n * See: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part05/PS3.5.html}.\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @param {object} version The version of the standard.\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs35Node(partNode, origin, version) {\n  // VRs\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/sect_6.2.html#table_6.2-1\n  const vrs = parseVrTableNode(\n    partNode.querySelector(getSelector('table_6.2-1')),\n    'DICOM Value Representations');\n\n  const vrsNames = Object.keys(vrs);\n\n  // replace undefined with null for JSON\n  for (let i = 0; i < vrsNames.length; ++i) {\n    if (typeof vrs[vrsNames[i]] === 'undefined') {\n      vrs[vrsNames[i]] = null;\n    }\n  }\n\n  const vrsResult = {\n    name: 'VRs',\n    origin: origin,\n    raw: vrs,\n    data: JSON.stringify(vrs, null, '  ')\n  };\n\n  // 32-bit VL VRs\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/chapter_7.html#table_7.1-1\n  // table 7.1-1 caption:\n  // - before 2019e: 'Data Element with Explicit VR of OB, OD...'\n  // - >= 2019e: 'Data Element with Explicit VR other than as shown\n  //   in Table 7.1-2'\n  let isBefore2019e = true;\n  if (version.year > 2019 ||\n    (version.year === 2019 && version.letter >= 'e')) {\n    isBefore2019e = false;\n  }\n\n  let xmlid = 'table_7.1-2';\n  if (isBefore2019e) {\n    xmlid = 'table_7.1-1';\n  }\n  const specialVrs = parseVrCaptionNode(\n    partNode.querySelector(getSelector(xmlid)),\n    'Data Element with Explicit VR');\n\n  let vrVl32s = specialVrs;\n  if (!isBefore2019e) {\n    vrVl32s = vrsNames.filter(function (item) {\n      return !specialVrs.includes(item);\n    });\n  }\n\n  const vrVl32Result = {\n    name: '32-bit VL VRs',\n    origin: origin,\n    raw: vrVl32s,\n    data: JSON.stringify(vrVl32s)\n  };\n\n  // Extended or replaced default character repertoire VRs\n  // https://dicom.nema.org/medical/dicom/current/output/html/part05.html#sect_6.1.2.2\n  const charSetVrs = parseCharSetVrNode(\n    partNode.querySelector(getSelector('sect_6.1.2.2')));\n\n  const charSetVrResult = {\n    name: 'Character Set VRs',\n    origin: origin,\n    raw: charSetVrs,\n    data: JSON.stringify(charSetVrs)\n  };\n\n  return [vrsResult, vrVl32Result, charSetVrResult];\n}\n\n/**\n * Parse a PS3.6 node: Data Dictionary.\n * See: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part06/PS3.6.html}.\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs36Node(partNode, origin) {\n  let tags36 = [];\n  // 0002: DICOM File Meta Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_7.html#table_7-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_7-1')),\n    partNode,\n    'Registry of DICOM File Meta Elements'));\n  // 0004: DICOM Directory Structuring Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_8.html#table_8-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_8-1')),\n    partNode,\n    'Registry of DICOM Directory Structuring Elements'));\n  // DICOM Data Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_6.html#table_6-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_6-1')),\n    partNode,\n    'Registry of DICOM Data Elements'));\n\n  const tagsResults = {\n    name: 'DICOM Tags',\n    origin: origin,\n    raw: tags36,\n    data: stringifyTags(adaptTagsForDwv(tags36))\n  };\n\n  // transfer syntax\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1\n  const uids = parseUidTableNode(\n    partNode.querySelector(getSelector('table_A-1')),\n    partNode,\n    'UID Values',\n    'Transfer Syntax');\n  const uidsResults = {\n    name: 'Transfer syntax UIDs',\n    origin: origin,\n    raw: uids,\n    data: JSON.stringify(adaptUidsForDwv(uids), null, '  ')\n  };\n\n  // standard SOPs class\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1\n  const sops = parseUidTableNode(\n    partNode.querySelector(getSelector('table_A-1')),\n    partNode,\n    'UID Values',\n    'SOP Class',\n    new RegExp('^1.2.840.10008.5.1.4.1.1.')\n  );\n  const sopsResults = {\n    name: 'Standard SOP class',\n    origin: origin,\n    raw: sops,\n    data: JSON.stringify(adaptUidsForDwv(sops), null, '  ')\n  };\n\n  return [tagsResults, uidsResults, sopsResults];\n}\n\n/**\n * Parse a PS3.7 node: Message Exchange.\n * See: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part07/PS3.7.html}.\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs37Node(partNode, origin) {\n  let tags37 = [];\n  // 0000: command\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part07/chapter_E.html#table_E.1-1\n  tags37 = tags37.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_E.1-1')),\n    partNode,\n    'Command Fields'));\n  // 0000: command (retired)\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part07/sect_E.2.html#table_E.2-1\n  tags37 = tags37.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_E.2-1')),\n    partNode,\n    'Retired Command Fields'));\n\n  return {\n    name: 'DICOM tags group 0000',\n    origin: origin,\n    raw: tags37,\n    data: stringifyTags(adaptTagsForDwv(tags37))\n  };\n}\n\n/**\n * Get a selector for an element with the input xml:id.\n * Looking for:\n *   - <table label=\"l\"> when the id starts with 'table_',\n *   - <section label=\"l\"> when the id starts with 'sect_'.\n *\n * @param {string} xmlid The id to look for.\n * @returns {string} The selector.\n */\nfunction getSelector(xmlid) {\n  let prefix = '';\n  if (xmlid.startsWith('table_')) {\n    prefix = 'table[label=\\'' + xmlid.substring(6);\n  } else if (xmlid.startsWith('sect_')) {\n    prefix = 'section[label=\\'' + xmlid.substring(5);\n  } else {\n    throw new Error('Unknown xml:id format.');\n  }\n  return prefix + '\\']';\n}\n\n/**\n * Get the 'linkend' value (an xml:id) of an input string.\n * Looking for: <xref linkend=\"sect_C.1-7\">.\n *\n * @param {string} str The input string.\n * @returns {string} The xml:id.\n */\nfunction getLinkend(str) {\n  const regex = /linkend=\"(.+?)\"/g;\n  const matches = [...str.matchAll(regex)];\n  // return first result\n  if (matches.length === 0 || matches[0].length !== 2) {\n    throw new Error('Cannot find linkend value in: ' + str);\n  }\n  return matches[0][1];\n}\n\n/**\n * Extract enum values from a string\n *   (created by parseVariableListNode).\n *\n * @param {string} str The string to extract the enum from.\n * @returns {object} An object containing the input string ('str')\n *   either in full or without the enum if found and\n *   the enum ('enum') if found.\n */\nfunction extractEnum(str) {\n  const result = {str: str};\n\n  // looks like: 'enum=ITEM0,ITEM1;'\n  const start = str.indexOf('enum=');\n  if (start !== -1) {\n    const end = str.indexOf(';');\n    if (end === -1) {\n      throw new Error('Badly formed enum');\n    }\n    // remove enum from input\n    const desc = str.substring(0, start) +\n      str.substring(end, str.length - 1);\n    result.str = desc.trim();\n    // store enum as array\n    result.enum = str.substring(start + 5, end).split(',');\n  }\n\n  return result;\n}\n\n/**\n * Extract condition arguments from a string.\n *\n * @param {string} str The string to extract the condition from.\n * @returns {object} An object containing the input string ('str')\n *   either in full or without the condition if found and\n *   the condition ('condition') if found.\n */\nfunction extractCondition(str) {\n  const result = {str: str};\n\n  const reqIndex = str.indexOf('Required if');\n  if (reqIndex !== -1) {\n    let gotConditionMatch = false;\n    // 'Required if Context Identifier (0008,010F) is present.'\n    const regex = /Required if ([\\w\\s]+) (\\([\\dA-F]{4},[\\dA-F]{4}\\)) ([\\w\\s]+)\\./g;\n    const matches = [...str.matchAll(regex)];\n    if (matches.length !== 0 && matches[0].length === 4) {\n      if (matches[0][3] === 'is present' ||\n        matches[0][3] === 'is not present' ||\n        matches[0][3].startsWith('has a value') ||\n        matches[0][3].startsWith('is')) {\n        gotConditionMatch = true;\n        // condition without first match element\n        result.condition = matches[0].slice(1);\n        // remove condition from input\n        result.str = str.replace(matches[0][0], '');\n      }\n    }\n\n    if (!gotConditionMatch) {\n      // condition\n      result.condition = str.substring(reqIndex);\n      // console.log('Cannot extract condition from: ', result.condition);\n      // remove condition from input\n      result.str = str.substring(0, reqIndex);\n    }\n  }\n  return result;\n}\n\n/**\n * Get a compare function for a specific object property.\n *\n * @param {string} property The object property to sort by.\n * @returns {Function} A compare function.\n */\nfunction getCompare(property) {\n  return function (a, b) {\n    if (a[property] < b[property]) {\n      return -1;\n    }\n    if (a[property] > b[property]) {\n      return 1;\n    }\n    return 0;\n  };\n}\n\n/**\n * Get a multi compare function for a list of object properties.\n *\n * @param {Array} properties The list of object properties to sort by.\n * @returns {Function} A compare function.\n */\nfunction getMultiCompare(properties) {\n  return function (a, b) {\n    let res = null;\n    for (let i = 0; i < properties.length; ++i) {\n      res = getCompare(properties[i])(a, b);\n      // if result is not zero, exit\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Parse a DICOM standard XML table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string|undefined} expectedCaption Optional expected table caption.\n * @returns {Array} The table property values.\n */\nfunction parseTableNode(tableNode, partNode, expectedCaption) {\n  // check node\n  if (!tableNode) {\n    throw new Error('No table node.');\n  }\n  // check caption\n  if (typeof expectedCaption !== 'undefined') {\n    checkNodeCaption(tableNode, expectedCaption);\n  }\n  // parse node rows\n  const properties = [];\n  const nodes = tableNode.querySelectorAll('tbody > tr');\n  if (nodes) {\n    for (const node of nodes) {\n      properties.push(parseTrNode(node, partNode));\n    }\n  }\n  return properties;\n}\n\n/**\n * Check a node caption.\n *\n * @param {Node} node A DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {boolean} isEqualCheck Bool to perform equal or include\n *   caption text check.\n */\nfunction checkNodeCaption(node, expectedCaption, isEqualCheck) {\n  if (typeof isEqualCheck === 'undefined') {\n    isEqualCheck = true;\n  }\n  const captions = node.getElementsByTagName('caption');\n  if (!captions) {\n    throw new Error('No node caption.');\n  }\n  if (captions.length === 0) {\n    throw new Error('Empty node caption.');\n  }\n  const text = captions[0].innerHTML;\n  if (isEqualCheck) {\n    if (text !== expectedCaption) {\n      if (text.toLowerCase() === expectedCaption.toLowerCase()) {\n        console.warn('Accepting caption with different case: ' +\n          expectedCaption);\n      } else {\n        throw new Error(\n          'The node caption is not the expected one: ' +\n          expectedCaption + ' != ' + text);\n      }\n    }\n  } else {\n    if (!text.includes(expectedCaption)) {\n      throw new Error(\n        'The node caption does not include the expected one: ' +\n        expectedCaption + ' != ' + text);\n    }\n  }\n}\n\n/**\n * Parse a DICOM standard XML table row node.\n *\n * @param {Node} trNode A DOM row node.\n * @param {Node} partNode The main DOm node.\n * @returns {Array} The row property values.\n */\nfunction parseTrNode(trNode, partNode) {\n  const properties = [];\n  const nodes = trNode.querySelectorAll('td');\n  if (nodes) {\n    for (const node of nodes) {\n      properties.push(parseTdNode(node, partNode));\n    }\n  }\n  // return\n  return properties;\n}\n\n/**\n * Parse a DICOM standard XML table row cell node.\n *\n * @param {Node} tdNode A DOM cell node.\n * @param {Node} partNode The main DOM node.\n * @returns {Array} The cell property values.\n */\nfunction parseTdNode(tdNode, partNode) {\n  const properties = [];\n  const nodes = tdNode.childNodes;\n  if (nodes) {\n    for (const node of nodes) {\n      // type 1 (elements) to avoid #text between elements\n      if (node.nodeType === 1) {\n        if (node.nodeName === 'variablelist') {\n          properties.push(parseVariableListNode(node));\n        } else {\n          properties.push(parseContentNode(node, partNode));\n        }\n      }\n    }\n  }\n  // return\n  return properties;\n}\n\n/**\n * Parse a DICOM standard XML table row cell content node,\n * mainly para and note.\n *\n * @param {Node} paraNode A DOM para node.\n * @param {Node} partNode The main DOM node.\n * @returns {string} The para value.\n */\nfunction parseContentNode(paraNode, partNode) {\n  let content = '';\n  const nodes = paraNode.childNodes;\n  if (nodes) {\n    for (const node of nodes) {\n      if (node.nodeType === 1) {\n        // type 1: element\n        if (node.nodeName === 'xref') {\n          // just keep linkend for xref\n          content += 'linkend=\"' + node.attributes.linkend.value + '\"';\n        } else {\n          content += parseContentNode(node, partNode);\n        }\n      } else if (node.nodeType === 3) {\n        // type 3: text\n        content += node.textContent;\n      } else {\n        console.warn('Un-anticipated node:' + node);\n      }\n    }\n  }\n  // clean\n  content = cleanString(content);\n\n  // link to section with defined terms\n  // (for ex in module attributes description)\n  const regex = /See linkend=.+ for Defined Terms\\./g;\n  const match = content.match(regex);\n  if (match && match.length === 1) {\n    let foundTermsList = false;\n    const xmlid = getLinkend(content);\n    if (xmlid.startsWith('sect_')) {\n      const subSection = partNode.querySelector(getSelector(xmlid));\n      const nodes = subSection.childNodes;\n      if (nodes) {\n        for (const node of nodes) {\n          if (node.nodeName === 'variablelist') {\n            if (!foundTermsList) {\n              foundTermsList = true;\n              content = content.replace(match[0], parseVariableListNode(node));\n            } else {\n              console.warn('Multiple variable list for ' + xmlid);\n            }\n          }\n        }\n      }\n    }\n    if (!foundTermsList) {\n      console.warn('Did not find terms list with: ' + content);\n    }\n  }\n\n  // return\n  return content;\n}\n\n/**\n * Parse a DICOM standard XML VariableList node.\n *\n * @param {Node} listNode A DOM list node.\n * @returns {string} The list values.\n */\nfunction parseVariableListNode(listNode) {\n  let content = 'enum=';\n  const listChilds = listNode.childNodes;\n  if (listChilds) {\n    for (const node of listChilds) {\n      if (node.nodeName === 'varlistentry') {\n        const entries = node.childNodes;\n        if (entries) {\n          for (const entryNode of entries) {\n            if (entryNode.nodeName === 'term') {\n              content += cleanString(entryNode.textContent) + ',';\n            }\n          }\n        }\n      }\n    }\n  }\n  // replace last comma with semicolon\n  return content.replace(/,$/, ';');\n}\n\n/**\n * Trim and get rid of new line and zero-width space.\n *\n * @param {string} str The input string.\n * @returns {string} The cleaned string.\n */\nfunction cleanString(str) {\n  return str.trim().replace(/\\n/g, '').replace(/\\u200B/g, '');\n}\n\n/**\n * Parse a DICOM standard XML tags table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @returns {Array} The list of DICOM tags objects.\n */\nfunction parseTagsTableNode(tableNode, partNode, expectedCaption) {\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const tags = [];\n  let tag = null;\n  for (const value of values) {\n    tag = tagPropertiesToObject(value);\n    if (tag) {\n      tags.push(tag);\n    }\n  }\n  return tags;\n}\n\n/**\n * Parse a DICOM standard XML UIDs table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {string} uidType The UID type.\n * @param {string} uidRegex The UID regex.\n * @returns {object} The list of transfer syntax UIDs.\n */\nfunction parseUidTableNode(\n  tableNode, partNode, expectedCaption, uidType, uidRegex) {\n  if (typeof uidRegex === 'undefined') {\n    uidRegex = '';\n  }\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const uids = {};\n  let uid = null;\n  for (const value of values) {\n    uid = uidPropertiesToObject(value, uidType);\n    if (uid && uid.value.match(uidRegex)) {\n      //uids[uid.value] = uid.name;\n      uids[uid.value] = uid.keyword;\n    }\n  }\n  return uids;\n}\n\n/**\n * Extract a string VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction stringVrTypeExtractor(str) {\n  let type;\n  if (str.startsWith('A string of characters') ||\n    str.startsWith('A character string') ||\n    str.startsWith('A concatenated date-time character string')) {\n    type = 'string';\n  }\n  return type;\n}\n\n/**\n * Extract an octet VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction octetVrTypeExtractor(str) {\n  let type;\n  // pre 2017 uses string and not stream...\n  if (str.startsWith('An octet-stream') ||\n    str.startsWith('A string of bytes')) {\n    type = 'Uint8';\n  }\n  return type;\n}\n\n/**\n * Extract a integer VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction intVrTypeExtractor(str) {\n  let type;\n  const regex = /(Signed|Unsigned) binary integer (\\d{2}) bits long/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 3) {\n    type = match[0][1] === 'Unsigned' ? 'Ui' : 'I';\n    type += 'nt' + match[0][2];\n  }\n  return type;\n}\n\n/**\n * Extract a float VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction floatVrTypeExtractor(str) {\n  let type;\n  const regex = /IEEE 754:1985 (\\d{2})-bit Floating Point Number/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Float' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Extract a word VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction wordVrTypeExtractor(str) {\n  let type;\n  // pre 2017 uses string and not stream...\n  const regex = /A (?:stream|string) of (\\d{2})-bit words/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Uint' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Extract a flaot word VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction floatWordVrTypeExtractor(str) {\n  let type;\n  const regex = /(\\d{2})-bit IEEE 754:1985 floating point words/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Uint' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Parse a VR 32bit VL DICOM standard XML node.\n *\n * @param {Node} tableNode The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption root.\n * @returns {Array} The list of VRs.\n */\nfunction parseVrTableNode(tableNode, partNode, expectedCaption) {\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const vrs = {};\n\n  const extractors = [\n    stringVrTypeExtractor,\n    octetVrTypeExtractor,\n    intVrTypeExtractor,\n    floatVrTypeExtractor,\n    wordVrTypeExtractor,\n    floatWordVrTypeExtractor\n  ];\n\n  for (const value of values) {\n    // 'short' VR name\n    const vrName = value[0][0];\n    // definition\n    const definition = value[1][0];\n    let type;\n    for (const extractor of extractors) {\n      type = extractor(definition);\n      // exit if found\n      if (typeof type !== 'undefined') {\n        break;\n      }\n    }\n    // log unknown types (typically AT and SQ)\n    if (typeof type === 'undefined') {\n      console.log('Unknown VR type for ' + vrName);\n    }\n    // store\n    vrs[vrName] = type;\n  }\n  return vrs;\n}\n\n/**\n * Parse a module list DICOM standard XML node:\n *   can be an IOD modules list or a functional group macros.\n *\n * @param {Node} node The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {string} usageRegex Optional usage selection regex.\n * @returns {Array} The list of IOD modules.\n */\nfunction parseModuleListNode(node, partNode, expectedCaption, usageRegex) {\n  const values = parseTableNode(node, partNode, expectedCaption);\n  const modules = [];\n  let module = null;\n  for (const value of values) {\n    module = moduleDefinitionPropertiesToObject(value, usageRegex);\n    if (module) {\n      modules.push(module);\n    }\n  }\n  return modules;\n}\n\n/**\n * Get modules from a modules definition list.\n *\n * @param {Array} list The IOD module list.\n * @param {Node} partNode The main DOM node.\n * @param {object} fgModulesProperties Optional functional group\n *   modules properties, undefined to parse a functional group.\n * @returns {Array} The modules array.\n */\nfunction parseModulesFromList(list, partNode, fgModulesProperties) {\n  const result = {};\n  for (const item of list) {\n    // TODO include usage and condition\n    const moduleName = item.module;\n    // get the module from the referenced section\n    const xmlid = getLinkend(item.reference);\n    const sectNode = partNode.querySelector(getSelector(xmlid));\n    for (const node of sectNode.childNodes) {\n      // stop at first table\n      if (node.nodeName === 'table') {\n        let name = moduleName;\n        if (typeof fgModulesProperties === 'undefined') {\n          name += ' Macro';\n        } else {\n          name += ' Module';\n        }\n        name += ' Attributes';\n        result[moduleName] =\n          parseModuleAttributesNode(node, partNode, name, fgModulesProperties);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nconst macros = {};\n\n/**\n * Parse a Information Entities (IE) modules DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {object} fgModules A list of functional group modules.\n * @returns {Array} The list of ....\n */\nfunction parseModuleAttributesNode(node, partNode, expectedCaption, fgModules) {\n  // expecting macro includes as: 'Include <xref linkend=\"table_10-18\"\n  //   xrefstyle=\"select: label quotedtitle\"/>'\n  const includeMacro = 'Include linkend=';\n  const includeFG = 'Include one or more Functional Group Macros';\n\n  const rows = parseTableNode(node, partNode, expectedCaption);\n  const result = [];\n  let startSq0 = false;\n  let startSq1 = false;\n  for (const row of rows) {\n    if (row.length === 0) {\n      const nodeCaptions = node.getElementsByTagName('caption');\n      if (nodeCaptions && nodeCaptions.length !== 0) {\n        console.warn('Empty module row in: ', nodeCaptions[0].innerHTML);\n      } else {\n        console.warn('Empty module row');\n      }\n      continue;\n    }\n    let attribute;\n    const attributeName = cleanString(row[0][0]);\n    let includeCase = false;\n\n    if (row.length === 4) {\n      // default: Attribute Name, Tag, Type, Attribute Description\n      attribute = [row];\n    } else if (attributeName.includes(includeMacro)) {\n      // include module macro\n      includeCase = true;\n      const xmlid = getLinkend(attributeName);\n      if (xmlid.startsWith('table_')) {\n        // store macro if not done yet\n        if (!macros[xmlid]) {\n          const subTable = partNode.querySelector(getSelector(xmlid));\n          macros[xmlid] =\n            parseModuleAttributesNode(subTable, partNode, undefined);\n        }\n        attribute = macros[xmlid];\n      }\n    } else if (attributeName.includes(includeFG)) {\n      // include functional group macro\n      includeCase = true;\n      attribute = [];\n      const keys = Object.keys(fgModules);\n      for (const key of keys) {\n        attribute = attribute.concat(fgModules[key]);\n      }\n    } else {\n      // avoid these rows\n      // code sequence: BASIC CODED ENTRY ATTRIBUTES, ENHANCED ENCODING MODE\n      if (attributeName !== 'BASIC CODED ENTRY ATTRIBUTES' &&\n        attributeName !== 'ENHANCED ENCODING MODE') {\n        console.warn('Unexpected row: \\'' + attributeName + '\\'');\n      }\n      continue;\n    }\n\n    // handle sequences\n    if (attributeName.startsWith('>')) {\n      // previous attribute (first level)\n      let previousAtt = result[result.length - 1];\n      // set flag and append array for first item\n      if (!startSq0) {\n        previousAtt.push([]);\n        startSq0 = true;\n      }\n      // remove '>' from name\n      if (!includeCase) {\n        attribute[0][0][0] = attribute[0][0][0].substring(1);\n      }\n\n      if (attributeName.startsWith('>>')) {\n        // previous attribute (second level)\n        previousAtt = previousAtt[4][previousAtt[4].length - 1];\n        // set flag and append array for first item\n        if (!startSq1) {\n          previousAtt.push([]);\n          startSq1 = true;\n        }\n      } else {\n        // reset second level flag\n        if (startSq1) {\n          startSq1 = false;\n        }\n      }\n      // append to previous attribute\n      previousAtt[4].push(...attribute);\n    } else if (attributeName.startsWith('>>>')) {\n      console.warn('Not expecting a triple \\'>\\'');\n    } else {\n      // reset first level flag\n      if (startSq0) {\n        startSq0 = false;\n      }\n      // reset second level flag\n      if (startSq1) {\n        startSq1 = false;\n      }\n      // append to result\n      result.push(...attribute);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Parse a VR 32bit VL DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @param {string} expectedCaptionRoot The expected node caption root.\n * @returns {Array} The list VRs.\n */\nfunction parseVrCaptionNode(node, expectedCaptionRoot) {\n  // check node\n  if (!node) {\n    throw new Error('No Vr caption node.');\n  }\n  // check caption\n  checkNodeCaption(node, expectedCaptionRoot, false);\n  // expecting something like:\n  // 'Data Element with Explicit VR of OB, OW, OF, OD, SQ, UT or UN'\n  const regex = /(?:\\s)([A-Z]{2})(?:,|\\sor|\\sand|$)/g;\n  const caption = node.getElementsByTagName('caption');\n  const text = caption[0].innerHTML;\n  const matches = text.matchAll(regex);\n  const result = [];\n  for (const match of matches) {\n    result.push(match[1]); // [0] includes non capturing groups\n  }\n  return result;\n}\n\n/**\n * Parse a Character Set VR DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @returns {Array} The list of VRs.\n */\nfunction parseCharSetVrNode(node) {\n  // check node\n  if (!node) {\n    throw new Error('No char Vr node.');\n  }\n\n  const result = [];\n\n  // expecting something like:\n  // For Data Elements with Value Representations of SH (Short String),\n  // LO (Long String), UC (Unlimited Characters), ST (Short Text),\n  // LT (Long Text), UT (Unlimited Text) or PN (Person Name)\n  const regex = /(?:\\s)([A-Z]{2})(?:\\s\\(\\w+\\s\\w+\\))/g;\n  const paras = node.getElementsByTagName('para');\n  for (const para of paras) {\n    if (para.innerHTML.startsWith(\n      'For Data Elements with Value Representations')) {\n      const text = para.innerHTML;\n      const matches = text.matchAll(regex);\n      for (const match of matches) {\n        result.push(match[1]); // [0] includes non capturing groups\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Parse tag values as array and return a tag object.\n *\n * @param {Array} properties A tag row array of properties (length=6).\n * @returns {object} A tag object: {group, element, keyword, vr, vm}.\n */\nfunction tagPropertiesToObject(properties) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 5 && properties.length !== 6) {\n    throw new Error(\n      'Not the expected tag properties size: ' + properties.length);\n  }\n  // split (group,element)\n  const geSplit = properties[0][0].split(',');\n  const group = geSplit[0].substring(1, 5).toString();\n  const element = geSplit[1].substring(0, 4).toString();\n  // return\n  return {\n    group: group,\n    element: element,\n    keyword: typeof properties[2][0] === 'undefined' ? '' : properties[2][0],\n    vr: typeof properties[3][0] === 'undefined' ? '' : properties[3][0],\n    vm: typeof properties[4][0] === 'undefined' ? '' : properties[4][0]\n  };\n}\n\n/**\n * Parse UID values as array and return a UID object.\n *\n * @param {Array} properties A UID row array of properties (length=6).\n * @param {string} uidType The UID type.\n * @returns {object} A tag object: {group, element, keyword, vr, vm}.\n */\nfunction uidPropertiesToObject(properties, uidType) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 4 && properties.length !== 5) {\n    throw new Error('Not the expected UID values size: ' + properties.length);\n  }\n  let uid = null;\n  // check UID type\n  // a 'UID keyword' column was added in 2020d, use len-2 instead of index\n  if (properties[properties.length - 2][0].includes(uidType)) {\n    uid = {\n      value: properties[0][0],\n      name: properties[1][0],\n      keyword: properties[2][0]\n    };\n  }\n  return uid;\n}\n\n\n/**\n * Objectify IOD modules properties.\n *\n * @param {Array} properties The IOD module properties.\n * @param {string} usageRegex Optional usage selection regex.\n * @returns {object} A IOD module object.\n */\nfunction moduleDefinitionPropertiesToObject(properties, usageRegex) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 3 && properties.length !== 4) {\n    throw new Error('Not the expected IOD module values size: ' +\n      properties.length);\n  }\n  // possible Information Entities (IE) extra first column\n  let startCol = 0;\n  if (properties.length === 4) {\n    startCol = 1;\n  }\n  const moduleDef = {\n    module: properties[startCol][0],\n    reference: properties[startCol + 1][0],\n    usage: properties[startCol + 2][0]\n  };\n\n  // get condition from usage\n  if (moduleDef.usage.startsWith('C - Required')) {\n    moduleDef.condition = moduleDef.usage.substring(4);\n    moduleDef.usage = 'C';\n  }\n\n  // Usage property:\n  // - M: Mandatory;\n  // - C: Conditional;\n  // - U: User Option;\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part03/chapter_A.html#sect_A.1.3\n  if (moduleDef.usage !== 'M' && moduleDef.usage !== 'C' &&\n    moduleDef.usage !== 'U') {\n    console.warn('Unexpected IOD module usage: ' + moduleDef.usage);\n  }\n\n  // usage filter\n  if (typeof usageRegex !== 'undefined' &&\n    moduleDef.usage.match(usageRegex) === null) {\n    return null;\n  }\n\n  return moduleDef;\n}\n\n/**\n * Objectify modules properties.\n *\n * @param {Array} properties The module properties.\n * @param {string} typeRegex Optional type selection regex.\n * @returns {object} A module object.\n */\nfunction modulePropertiesListToObject(properties, typeRegex) {\n  const keys = Object.keys(properties);\n  const result = {};\n  for (const key of keys) {\n    const modules = [];\n    for (const mod of properties[key]) {\n      const module = modulePropertiesToObject(mod, typeRegex);\n      if (module) {\n        modules.push(module);\n      }\n    }\n    if (modules.length !== 0) {\n      result[key] = modules;\n    }\n  }\n  return result;\n}\n\n/**\n * Objectify modules properties.\n *\n * @param {Array} properties The module properties.\n * @param {string} typeRegex Optional type selection regex.\n * @returns {object} A module object.\n */\nfunction modulePropertiesToObject(properties, typeRegex) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 4 && properties.length !== 5) {\n    throw new Error('Not the expected module values size: ' +\n      properties.length);\n  }\n  const module = {\n    name: properties[0][0],\n    tag: properties[1][0],\n    type: properties[2][0]\n  };\n\n  // Type property:\n  // - 1: Required; 1C: Type 1 with condition;\n  // - 2: Required, Empty if Unknown; 2C: Type 2 with condition;\n  // - 3: Optional\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/sect_7.4.html\n  if (module.type !== '1' && module.type !== '1C' &&\n    module.type !== '2' && module.type !== '2C' &&\n    module.type !== '3') {\n    console.warn('Unexpected module type: ' + module.type);\n  }\n\n  // type filter\n  if (typeof typeRegex !== 'undefined' &&\n    module.type.match(typeRegex) === null) {\n    return null;\n  }\n\n  // description\n  let desc = '';\n  for (let i = 0; i < properties[3].length; ++i) {\n    // extract enum\n    const extract0 = extractEnum(properties[3][i]);\n    if (typeof extract0.enum !== 'undefined') {\n      module.enum = extract0.enum;\n    }\n    if (extract0.str.length !== 0) {\n      // extract condition\n      const extract1 = extractCondition(extract0.str);\n      if (typeof extract1.condition !== 'undefined') {\n        module.condition = extract1.condition;\n      }\n      // keep what's left\n      if (extract1.str.length !== 0) {\n        if (i !== 0) {\n          desc += ' ';\n        }\n        desc += extract1.str;\n      }\n    }\n  }\n  module.desc = desc;\n\n  // include\n  if (properties.length === 5) {\n    module.items = [];\n    const subProperties = properties[4];\n    for (const subProps of subProperties) {\n      const subModule = modulePropertiesToObject(subProps, typeRegex);\n      if (subModule) {\n        module.items.push(subModule);\n      }\n    }\n  }\n\n  return module;\n}\n\n/**\n * Adapt tags:\n *   - replace 'x' in groups and elements,\n *   - add GenericGroupLength to groups,\n *   - replace non single VRs.\n *\n * @param {Array} inputTags An array of tags.\n * @returns {Array} The adapted tags as a new array.\n */\nfunction adaptTagsForDwv(inputTags) {\n  // check tags\n  if (!inputTags) {\n    throw new Error('No tags.');\n  }\n  if (inputTags.length === 0) {\n    throw new Error('Empty tags.');\n  }\n\n  /**\n   * Replace 'x's in groups and elements.\n   *\n   * @param {string} str The input string.\n   * @returns {string} The updated string.\n   */\n  function replaceXs(str) {\n    str = str.replace(/xxxxx/g, 'x0004');\n    str = str.replace(/xxxx/g, 'x001');\n    str = str.replace(/xx/g, '00');\n    return str;\n  }\n\n  // clone input\n  const tags = inputTags.slice();\n\n  // list groups\n  const groups = [];\n  for (let t = 0; t < tags.length; ++t) {\n    // replace 'x's\n    tags[t].group = replaceXs(tags[t].group);\n    tags[t].element = replaceXs(tags[t].element);\n    // list groups\n    const grp = tags[t].group;\n    if (!groups.includes(grp)) {\n      groups.push(grp);\n    }\n  }\n\n  // add GenericGroupLength to groups\n  for (const group of groups) {\n    if (group !== '0000' && group !== '0002') {\n      tags.push({\n        group: group,\n        element: '0000',\n        keyword: 'GenericGroupLength',\n        vr: 'UL',\n        vm: '1'\n      });\n    }\n  }\n\n  // sort tags\n  tags.sort(getMultiCompare(['group', 'element']));\n\n  // check VRs\n  for (let i = 0; i < tags.length; ++i) {\n    let vr = tags[i].vr;\n    if (typeof vr !== 'undefined') {\n      if (vr.length !== 2) {\n        if (vr.substring(0, 8) === 'See Note') {\n          // #modif \"See Note\" -> \"NONE\"\n          vr = 'NONE';\n        } else if (vr === 'OB or OW') {\n          // #modif \"OB or OW\" -> \"ox\"\n          vr = 'ox';\n        } else if (vr === 'US or OW') {\n          // #modif \"US or OW\" -> \"xx\"\n          vr = 'xx';\n        } else if (vr === 'US or SS' ||\n          vr === 'US or SS or OW') {\n          // #modif \"US or SS\" or \"US or SS or OW\" -> \"xs\"\n          vr = 'xs';\n        } else {\n          console.warn('Unknown VR: \\'' + vr +\n            '\\' for ' + tags[i].group + ',' + tags[i].element);\n        }\n      }\n    } else {\n      vr = '';\n    }\n    tags[i].vr = vr;\n  }\n\n  return tags;\n}\n\n/**\n * Adapt UIDs:\n *   - replace '&amp;' in name with '&',\n *   - remove comments in name: string after ':'.\n *\n * @param {object} inputUids An list of UIDs.\n * @returns {object} The adapted UIDs as a new list.\n */\nfunction adaptUidsForDwv(inputUids) {\n  const keys = Object.keys(inputUids);\n  for (const key of keys) {\n    let name = inputUids[key];\n    // replace '&amp'\n    if (name.includes('&amp;')) {\n      name = name.replace('&amp;', '&');\n      inputUids[key] = name;\n    }\n    // remove comment\n    if (name.includes(':')) {\n      const pos = name.indexOf(':');\n      inputUids[key] = name.substring(0, pos);\n    }\n  }\n\n  return inputUids;\n}\n\n/**\n * Stringify a tags array.\n *\n * @param {Array} tags The tags array.\n * @returns {string} A stringified version of the input array.\n */\nfunction stringifyTags(tags) {\n  // check tags\n  if (!tags) {\n    throw new Error('No tags.');\n  }\n  if (tags.length === 0) {\n    throw new Error('Empty tags.');\n  }\n\n  // tabulation\n  const tab = '  ';\n  const quote = '\\'';\n  // result text\n  let text = '{\\n';\n\n  let group = '';\n  for (let i = 0; i < tags.length; ++i) {\n    const tag = tags[i];\n    let isFirstOfgroup = false;\n    // start group section\n    if (tag.group !== group) {\n      isFirstOfgroup = true;\n      // close previous\n      if (i !== 0) {\n        text += '\\n' + tab + '},\\n';\n      }\n      // start new\n      group = tag.group;\n      text += tab + quote + tag.group + quote + ': {\\n';\n    }\n\n    // tag\n    let tagText = isFirstOfgroup ? '' : ',\\n';\n    tagText += tab + tab +\n      quote + tag.element + quote + ': [' +\n      quote + tag.vr + quote + ', ' +\n      quote + tag.vm + quote + ', ' +\n      quote + tag.keyword + quote + ']';\n    text += tagText;\n  }\n\n  // last group line\n  text += '\\n' + tab + '}\\n';\n  // last line\n  text += '}\\n';\n\n  return text;\n}\n","// DICOM versions object\n// (only those published with this repo since NEMA does not do CORS...)\nconst dicomVersions = {\n  2016: ['a'],\n  2018: ['a'],\n  2020: ['a'],\n  2022: ['a'],\n};\n\n// Supported DICOM parts\nconst dicomParts = ['03', '05', '06', '07'];\n\n/**\n * Get the list of DICOM standard parts.\n *\n * @returns {Array} An array of parts.\n */\nexport function getDicomParts() {\n  return dicomParts;\n}\n\n/**\n * Get the list of DICOM standard versions.\n *\n * @returns {Array} An array of versions, ordered from most recent to older.\n */\nexport function getDicomVersions() {\n  const keys = Object.keys(dicomVersions);\n  keys.sort(compare);\n  // create version strings\n  const versions = [];\n  for (let i = 0; i < keys.length; ++i) {\n    const majorVersion = keys[i];\n    const minorVersions = dicomVersions[majorVersion];\n    for (let j = 0; j < minorVersions.length; ++j) {\n      versions.push(majorVersion + minorVersions[j]);\n    }\n  }\n  // return\n  return versions;\n}\n\n/**\n * Sort keys.\n *\n * @param {string} a First string.\n * @param {string} b Second string.\n * @returns {number} Negative is a > b.\n */\nfunction compare(a, b) {\n  return parseInt(b, 10) - parseInt(a, 10);\n}\n\n/**\n * Get a list of DICOM versions associated to their resrouce link.\n *\n * @param {string} partNumber The part number as a string.\n * @returns {Array} An array of {xml, html} objects.\n */\nexport function getDicomPartLinks(partNumber) {\n  const versions = getDicomVersions();\n  const links = {};\n  for (let i = 0; i < versions.length; ++i) {\n    links[versions[i]] = {\n      xml: getXmlLink(versions[i], partNumber),\n      html: getHtmlLink(versions[i], partNumber),\n    };\n  }\n  // return\n  return links;\n}\n\n/**\n * Get the xml link to the standard.\n * Links go to github since nema does not publish standard with CORS.\n *\n * @param {string} version The standard version.\n * @param {string} partNumber The standard part number as a string.\n * @returns {string} The full link to the desired file.\n */\nfunction getXmlLink(version, partNumber) {\n  const githubRoot = 'https://raw.githubusercontent.com/ivmartel/dcmStdToJs/main/resources/standard';\n  const partFileName = 'part' + partNumber;\n  return githubRoot + '/' + version + '/' + partFileName + '.xml';\n}\n\n/**\n * Get the html link to the standard.\n *\n * @param {string} version The standard version.\n * @param {string} partNumber The standard part number as a string.\n * @returns {string} The full link to the desired html.\n */\nfunction getHtmlLink(version, partNumber) {\n  const nemaRoot = 'http://dicom.nema.org/medical/dicom';\n  const partFileName = 'part' + partNumber;\n  return nemaRoot + '/' + version + '/output/html/' + partFileName + '.html';\n}\n","import {DicomXMLParser} from './parser.js';\nimport * as nema from './nema.js';\n\n/**\n * GUI classe.\n */\nexport class Gui {\n  /**\n   * Setup the gui: bind parse button.\n   */\n  setup() {\n    document.getElementById('parseButton').addEventListener(\n      'click', onParseButtonClick);\n    document.getElementById('fileupload').addEventListener(\n      'change', onFileuploadChange);\n  }\n\n  /**\n   * DOMContentLoaded handler: update the version select.\n   */\n  onDOMContentLoaded() {\n    updateStandardSelect();\n  }\n}\n\n/**\n * Set the progress of the progressbar.\n *\n * @param {Event} event A progress event.\n */\nfunction setProgress(event) {\n  const progressBar = document.getElementById('progressBar');\n  if (event.lengthComputable) {\n    progressBar.max = event.total;\n    progressBar.value = event.loaded;\n  }\n}\n\n/**\n * Handle file upload change event.\n *\n * @param {Event} event The file upload change event.\n */\nfunction onFileuploadChange(event) {\n  // enable / disable parse button if files were selected\n  const parseButton = document.getElementById('parseButton');\n  if (event.target.files.length !== 0) {\n    parseButton.disabled = false;\n  } else {\n    parseButton.disabled = true;\n  }\n}\n\n/**\n * Handle parse button click event.\n *\n * @param {Event} event The parse button click event.\n */\nfunction onParseButtonClick(event) {\n  const button = event.target;\n\n  // reset progress\n  setProgress({loaded: 0, total: 100, lengthComputable: true});\n\n  // disable button\n  button.disabled = true;\n\n  // clear output zone\n  const outputDiv = document.getElementById('output');\n  outputDiv.innerHTML = '';\n\n  const parser = new DicomXMLParser();\n\n  // parse file if provided, parse link otherwise\n  const fileInputElement = document.getElementById('fileupload');\n  if (fileInputElement.files.length === 1) {\n    const file = fileInputElement.files[0];\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      // enable button\n      button.disabled = false;\n      // show tags\n      const domParser = new DOMParser();\n      const doc = domParser.parseFromString(\n        event.target.result, 'application/xml');\n      try {\n        showResult(parser.parseNode(doc, file.name));\n      } catch (error) {\n        showError(error);\n      }\n      // clear\n      fileInputElement.value = '';\n    };\n    reader.onprogress = setProgress;\n    reader.onloadend = setProgress;\n    reader.onerror = function () {\n      showError('ERROR while loading data, see log for details...');\n    };\n    reader.readAsText(file);\n  } else {\n    // use selected version or default\n    const dicomVersionsSelect = document.getElementById('dicomVersions');\n    const selectedVersion = dicomVersionsSelect.options[\n      dicomVersionsSelect.selectedIndex\n    ].value;\n    const dicomPartsSelect = document.getElementById('dicomParts');\n    const selectedPart = dicomPartsSelect.options[\n      dicomPartsSelect.selectedIndex\n    ].value;\n\n    const url = nema.getDicomPartLinks(selectedPart)[selectedVersion].xml;\n    const request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'document';\n    request.overrideMimeType('text/xml'); // force xml\n    request.onload = function (event) {\n      // enable button\n      button.disabled = false;\n      // show tags\n      try {\n        showResult(parser.parseNode(event.target.response, url));\n      } catch (error) {\n        showError(error);\n      }\n    };\n    request.onprogress = setProgress;\n    request.onloadend = setProgress;\n    request.onerror = function () {\n      showError('ERROR while retrieving data, see log for details...');\n    };\n    request.send();\n  }\n}\n\n/**\n * Format a parse result into a html element and append it to the 'output' div.\n *\n * @param {Array} result A parse result object array.\n */\nfunction showResult(result) {\n  // append to page as text area\n  if (Array.isArray(result)) {\n    for (let i = 0; i < result.length; ++i) {\n      appendResult('result-' + i, result[i]);\n    }\n  } else {\n    appendResult('result-0', result);\n  }\n}\n\n/**\n * Show an error result.\n *\n * @param {string|Event} error The error to display.\n */\nfunction showError(error) {\n  console.error(error);\n  let message = error;\n  if (typeof error.message !== 'undefined') {\n    message = error.message;\n  }\n  appendResult('error', message);\n}\n\n/**\n * Append a text area to the ouput div.\n *\n * @param {string} name The name of text area.\n * @param {object} content The result content.\n */\nfunction appendResult(name, content) {\n  const div = document.getElementById('output');\n  let contentString = '';\n\n  if (typeof content.name !== 'undefined') {\n    const para = document.createElement('p');\n    let numberOfItems;\n    if (Array.isArray(content.raw)) {\n      numberOfItems = content.raw.length;\n    } else {\n      numberOfItems = Object.keys(content.raw).length;\n    }\n    para.appendChild(document.createTextNode(\n      content.name +\n      ' (' + content.origin +\n      ', ' + numberOfItems + ' items) '\n    ));\n\n    const link = document.createElement('a');\n    link.download = 'result.json';\n    const blob = new Blob([content.data], {type: 'text/plain'});\n    link.href = window.URL.createObjectURL(blob);\n    link.appendChild(document.createTextNode('download'));\n\n    para.appendChild(link);\n    div.appendChild(para);\n\n    contentString = content.data;\n  } else {\n    contentString = content;\n  }\n\n  const area = document.createElement('textarea');\n  area.id = name;\n  area.appendChild(document.createTextNode(contentString));\n  area.spellcheck = false;\n  if (name.includes('error')) {\n    area.className = 'error';\n  } else {\n    area.rows = 20;\n  }\n\n  div.appendChild(area);\n}\n\n/**\n * Update standard select with available standard versions.\n */\nfunction updateStandardSelect() {\n  const versionSelect = document.getElementById('dicomVersions');\n\n  // place holder option\n  let versionOption = document.createElement('option');\n  versionOption.disabled = true;\n  versionOption.selected = true;\n  versionOption.text = 'Select a version';\n  versionOption.value = '';\n  versionSelect.add(versionOption);\n  // version options\n  const versions = nema.getDicomVersions();\n  for (let i = 0; i < versions.length; ++i) {\n    versionOption = document.createElement('option');\n    versionOption.text = versions[i];\n    versionOption.value = versions[i];\n    versionSelect.add(versionOption);\n  }\n\n  const partSelect = document.getElementById('dicomParts');\n\n  // place holder option\n  let partOption = document.createElement('option');\n  partOption.disabled = true;\n  partOption.selected = true;\n  partOption.text = 'Select a part';\n  partOption.value = '';\n  partSelect.add(partOption);\n  // part options\n  const parts = nema.getDicomParts();\n  for (let i = 0; i < parts.length; ++i) {\n    partOption = document.createElement('option');\n    partOption.text = parts[i];\n    partOption.value = parts[i];\n    partSelect.add(partOption);\n  }\n\n  const parseButton = document.getElementById('parseButton');\n\n  // update associated links on select change\n  versionSelect.onchange = function (event) {\n    const part = partSelect[partSelect.selectedIndex].value;\n    if (part !== '') {\n      updateVersionLinks(event.target.value, part);\n      parseButton.disabled = false;\n    }\n  };\n  partSelect.onchange = function (event) {\n    const version = versionSelect[versionSelect.selectedIndex].value;\n    if (version !== '') {\n      updateVersionLinks(version, event.target.value);\n      parseButton.disabled = false;\n    }\n  };\n}\n\n/**\n * Update the version links.\n *\n * @param {string} version The dicom standard version.\n * @param {string} partNumber The standard part number.\n */\nfunction updateVersionLinks(version, partNumber) {\n  const links = nema.getDicomPartLinks(partNumber)[version];\n  // xml standard link\n  const xmlLink = document.createElement('a');\n  xmlLink.href = links.xml;\n  xmlLink.appendChild(document.createTextNode('xml'));\n  // html standard link\n  const htmlLink = document.createElement('a');\n  htmlLink.href = links.html;\n  htmlLink.appendChild(document.createTextNode('html'));\n\n  const versionLinks = document.getElementById('versionLinks');\n  // clear\n  versionLinks.innerHTML = '';\n  // add new links\n  versionLinks.appendChild(document.createTextNode('(dict: '));\n  versionLinks.append(xmlLink);\n  versionLinks.appendChild(document.createTextNode(', '));\n  versionLinks.append(htmlLink);\n  versionLinks.appendChild(document.createTextNode(')'));\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {Gui} from './gui.js';\nimport './style.css';\n\n// setup\nconst gui = new Gui();\ngui.setup();\ngui.onDOMContentLoaded();"],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","___CSS_LOADER_EXPORT___","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","DicomXMLParser","parseNode","partNode","origin","book","label","getAttribute","subtitle","prefix","innerHTML","startsWith","endIndex","indexOf","versionStr","substring","trim","version","year","parseInt","letter","iodList","name","iod","usageRegex","fgModulesProperties","fgLabel","parseModulesFromList","parseModuleListNode","getSelector","modulePropertiesListToObject","raw","parsePs33Node","vrs","tableNode","values","parseTableNode","parseVrTableNode","extractors","stringVrTypeExtractor","octetVrTypeExtractor","intVrTypeExtractor","floatVrTypeExtractor","wordVrTypeExtractor","floatWordVrTypeExtractor","value","vrName","type","extractor","console","log","vrsNames","keys","vrsResult","isBefore2019e","xmlid","specialVrs","node","checkNodeCaption","matches","getElementsByTagName","matchAll","match","parseVrCaptionNode","vrVl32s","filter","includes","vrVl32Result","charSetVrs","regex","paras","para","parseCharSetVrNode","parsePs35Node","tags36","parseTagsTableNode","tagsResults","stringifyTags","adaptTagsForDwv","uids","parseUidTableNode","uidsResults","adaptUidsForDwv","sops","RegExp","parsePs36Node","tags37","parsePs37Node","getLinkend","str","extractEnum","start","end","desc","enum","split","extractCondition","reqIndex","gotConditionMatch","condition","slice","replace","getCompare","property","b","expectedCaption","properties","nodes","querySelectorAll","parseTrNode","isEqualCheck","captions","text","toLowerCase","warn","trNode","parseTdNode","tdNode","childNodes","nodeType","nodeName","parseVariableListNode","parseContentNode","paraNode","linkend","textContent","cleanString","foundTermsList","listNode","listChilds","entries","entryNode","tags","tag","tagPropertiesToObject","uidType","uidRegex","uid","uidPropertiesToObject","keyword","moduleDefinitionPropertiesToObject","moduleName","reference","sectNode","parseModuleAttributesNode","macros","fgModules","rows","startSq0","startSq1","row","nodeCaptions","attribute","attributeName","includeCase","subTable","previousAtt","geSplit","group","vr","vm","startCol","moduleDef","usage","typeRegex","mod","modulePropertiesToObject","extract0","extract1","items","subProperties","subProps","subModule","inputTags","replaceXs","groups","t","grp","sort","res","inputUids","pos","tab","quote","isFirstOfgroup","tagText","dicomVersions","dicomParts","getDicomVersions","compare","versions","majorVersion","minorVersions","j","getDicomPartLinks","partNumber","links","xml","getXmlLink","html","getHtmlLink","githubRoot","nemaRoot","setProgress","event","progressBar","getElementById","lengthComputable","max","total","loaded","onFileuploadChange","parseButton","files","disabled","onParseButtonClick","button","parser","fileInputElement","file","reader","FileReader","onload","doc","DOMParser","parseFromString","showResult","error","showError","onprogress","onloadend","onerror","readAsText","dicomVersionsSelect","selectedVersion","selectedIndex","dicomPartsSelect","url","nema","request","XMLHttpRequest","open","responseType","overrideMimeType","response","send","Array","isArray","appendResult","message","div","contentString","numberOfItems","link","download","blob","Blob","href","URL","createObjectURL","area","spellcheck","className","updateVersionLinks","xmlLink","htmlLink","versionLinks","append","locals","gui","setup","addEventListener","onDOMContentLoaded","versionSelect","versionOption","selected","add","partSelect","partOption","parts","onchange","part","updateStandardSelect"],"sourceRoot":""}