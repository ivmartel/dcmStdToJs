{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://dcmStdToJs/./src/style.css","webpack://dcmStdToJs/./node_modules/css-loader/dist/runtime/api.js","webpack://dcmStdToJs/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://dcmStdToJs/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://dcmStdToJs/webpack/bootstrap","webpack://dcmStdToJs/webpack/runtime/compat get default export","webpack://dcmStdToJs/webpack/runtime/define property getters","webpack://dcmStdToJs/webpack/runtime/hasOwnProperty shorthand","webpack://dcmStdToJs/webpack/runtime/nonce","webpack://dcmStdToJs/./src/parser.js","webpack://dcmStdToJs/./src/nema.js","webpack://dcmStdToJs/./src/gui.js","webpack://dcmStdToJs/./src/style.css?7163","webpack://dcmStdToJs/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  font-family: Verdana, Arial, Helvetica, sans-serif;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n  background: #efefef;\\n}\\n\\n#output {\\n  margin-top: 10px;\\n}\\n\\n#output p {\\n  margin-top: 10px;\\n  margin-bottom: 0;\\n  background: #efefef;\\n  text-align: right;\\n  font-size: small;\\n}\\n\\n#output textarea {\\n  width: 99%;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kDAAkD;AACpD;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ\",\"sourcesContent\":[\"body {\\n  font-family: Verdana, Arial, Helvetica, sans-serif;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n  background: #efefef;\\n}\\n\\n#output {\\n  margin-top: 10px;\\n}\\n\\n#output p {\\n  margin-top: 10px;\\n  margin-bottom: 0;\\n  background: #efefef;\\n  text-align: right;\\n  font-size: small;\\n}\\n\\n#output textarea {\\n  width: 99%;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nc = undefined;","/**\n * DICOM xml parser.\n */\nexport class DicomXMLParser {\n\n  /**\n   * Parse a DICOM standard xml node.\n   *\n   * @param {Node} partNode The main DOM node.\n   * @param {string} origin The origin of the node (optional).\n   * @returns {object} An object containing:\n   * - name: a lael for the result\n   * - origin: the origin of the node\n   * - raw: the raw result\n   * - data: the adapted result as string\n   */\n  parseNode(partNode, origin) {\n    // get book node\n    const book = partNode.querySelector('book');\n    if (!book) {\n      throw new Error('No book node.');\n    }\n    // get book label\n    const label = book.getAttribute('label');\n    if (!label) {\n      throw new Error('No book label.');\n    }\n\n    // get version\n    // 'DICOM PS3.5 2020a - ...'\n    const subtitle = book.querySelector('subtitle');\n    if (!subtitle) {\n      throw new Error('No book subtitle.');\n    }\n    const prefix = 'DICOM ' + label;\n    if (!subtitle.innerHTML.startsWith(prefix)) {\n      throw new Error('Missing DICOM standard version prefix.');\n    }\n    const endIndex = subtitle.innerHTML.indexOf('-');\n    const versionStr =\n      subtitle.innerHTML.substring(prefix.length, endIndex).trim();\n    const version = {\n      year: parseInt(versionStr.substring(0, 4), 10),\n      letter: versionStr.substring(4)\n    };\n\n\n    let result = null;\n\n    if (label === 'PS3.3') {\n      result = parsePs33Node(partNode, origin);\n    } else if (label === 'PS3.5') {\n      result = parsePs35Node(partNode, origin, version);\n    } else if (label === 'PS3.6') {\n      result = parsePs36Node(partNode, origin);\n    } else if (label === 'PS3.7') {\n      result = parsePs37Node(partNode, origin);\n    } else {\n      throw new Error('Unknown book label: ' + label);\n    }\n\n    return result;\n  }\n}\n\n/**\n * Parse a PS3.3 node: Information Object Definitions (IODs)\n * https://dicom.nema.org/medical/dicom/current/output/chtml/part03/PS3.3.html\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs33Node(partNode, origin) {\n  const result = [];\n  // CT: https://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_A.3.3.html#table_A.3-1\n  const iodList = [\n    {name: 'CT Image', label: 'table_A.3-1'},\n    {name: 'MR Image', label: 'table_A.4-1'},\n    // {name: 'NM Image', label: 'table_A.5-1'},\n    // {name: 'US Image', label: 'table_A.6-1'},\n    // {name: 'PET Image', label: 'table_A.21.3-1'},\n    // {\n    //   name: 'Segmentation',\n    //   label: 'table_A.51-1',\n    //   fgLabel: 'table_A.51-2'\n    // }\n  ];\n\n  for (const iod of iodList) {\n    const usageRegex = /M|C/g;\n    let fgModulesProperties = null;\n    // functional group modules\n    if (typeof iod.fgLabel !== 'undefined') {\n      const fgModulesDefs = parseModuleListNode(\n        partNode.querySelector(getSelector(iod.fgLabel)),\n        partNode,\n        iod.name + ' Functional Group Macros',\n        usageRegex\n      );\n      fgModulesProperties =\n        parseModulesFromList(fgModulesDefs, partNode);\n    }\n    // IOD modules\n    const iodModulesDefs = parseModuleListNode(\n      partNode.querySelector(getSelector(iod.label)),\n      partNode,\n      iod.name + ' IOD Modules',\n      usageRegex\n    );\n    const modulesProperties = parseModulesFromList(\n      iodModulesDefs, partNode, fgModulesProperties);\n\n    const typeRegex = /1|1C/g;\n    const modules = modulePropertiesListToObject(\n      modulesProperties, typeRegex);\n\n    result.push({\n      name: iod.name + ' IOD Modules',\n      origin: origin,\n      raw: modules,\n      data: JSON.stringify(modules, null, '  ')\n    });\n  }\n  return result;\n}\n\n/**\n * Parse a PS3.5 node: Data Structures and Encoding\n * https://dicom.nema.org/medical/dicom/current/output/chtml/part05/PS3.5.html\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @param {object} version The version of the standard.\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs35Node(partNode, origin, version) {\n  // VRs\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/sect_6.2.html#table_6.2-1\n  const vrs = parseVrTableNode(\n    partNode.querySelector(getSelector('table_6.2-1')),\n    'DICOM Value Representations');\n\n  const vrsNames = Object.keys(vrs);\n\n  // replace undefined with null for JSON\n  for (let i = 0; i < vrsNames.length; ++i) {\n    if (typeof vrs[vrsNames[i]] === 'undefined') {\n      vrs[vrsNames[i]] = null;\n    }\n  }\n\n  const vrsResult = {\n    name: 'VRs',\n    origin: origin,\n    raw: vrs,\n    data: JSON.stringify(vrs, null, '  ')\n  };\n\n  // 32-bit VL VRs\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/chapter_7.html#table_7.1-1\n  // table 7.1-1 caption:\n  // - before 2019e: 'Data Element with Explicit VR of OB, OD...'\n  // - >= 2019e: 'Data Element with Explicit VR other than as shown\n  //   in Table 7.1-2'\n  let isBefore2019e = true;\n  if (version.year > 2019 ||\n    (version.year === 2019 && version.letter >= 'e')) {\n    isBefore2019e = false;\n  }\n\n  let xmlid = 'table_7.1-2';\n  if (isBefore2019e) {\n    xmlid = 'table_7.1-1';\n  }\n  const specialVrs = parseVrCaptionNode(\n    partNode.querySelector(getSelector(xmlid)),\n    'Data Element with Explicit VR');\n\n  let vrVl32s = specialVrs;\n  if (!isBefore2019e) {\n    vrVl32s = vrsNames.filter(function (item) {\n      return !specialVrs.includes(item);\n    });\n  }\n\n  const vrVl32Result = {\n    name: '32-bit VL VRs',\n    origin: origin,\n    raw: vrVl32s,\n    data: JSON.stringify(vrVl32s)\n  };\n\n  // Extended or replaced default character repertoire VRs\n  // https://dicom.nema.org/medical/dicom/current/output/html/part05.html#sect_6.1.2.2\n  const charSetVrs = parseCharSetVrNode(\n    partNode.querySelector(getSelector('sect_6.1.2.2')));\n\n  const charSetVrResult = {\n    name: 'Character Set VRs',\n    origin: origin,\n    raw: charSetVrs,\n    data: JSON.stringify(charSetVrs)\n  };\n\n  return [vrsResult, vrVl32Result, charSetVrResult];\n}\n\n/**\n * Parse a PS3.6 node:  Data Dictionary\n * https://dicom.nema.org/medical/dicom/current/output/chtml/part06/PS3.6.html\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs36Node(partNode, origin) {\n  let tags36 = [];\n  // 0002: DICOM File Meta Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_7.html#table_7-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_7-1')),\n    partNode,\n    'Registry of DICOM File Meta Elements'));\n  // 0004: DICOM Directory Structuring Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_8.html#table_8-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_8-1')),\n    partNode,\n    'Registry of DICOM Directory Structuring Elements'));\n  // DICOM Data Elements\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_6.html#table_6-1\n  tags36 = tags36.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_6-1')),\n    partNode,\n    'Registry of DICOM Data Elements'));\n\n  const tagsResults = {\n    name: 'DICOM Tags',\n    origin: origin,\n    raw: tags36,\n    data: stringifyTags(adaptTagsForDwv(tags36))\n  };\n\n  // transfer syntax\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1\n  const uids = parseUidTableNode(\n    partNode.querySelector(getSelector('table_A-1')),\n    partNode,\n    'UID Values',\n    'Transfer Syntax');\n  const uidsResults = {\n    name: 'Transfer syntax UIDs',\n    origin: origin,\n    raw: uids,\n    data: JSON.stringify(adaptUidsForDwv(uids), null, '  ')\n  };\n\n  // SOPs\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1\n  const sops = parseUidTableNode(\n    partNode.querySelector(getSelector('table_A-1')),\n    partNode,\n    'UID Values',\n    'SOP');\n  const sopsResults = {\n    name: 'SOP class and instance UIDs',\n    origin: origin,\n    raw: sops,\n    data: JSON.stringify(adaptUidsForDwv(sops), null, '  ')\n  };\n\n  return [tagsResults, uidsResults, sopsResults];\n}\n\n/**\n * Parse a PS3.7 node: Message Exchange\n * https://dicom.nema.org/medical/dicom/current/output/chtml/part07/PS3.7.html\n *\n * @param {Node} partNode The main DOM node.\n * @param {string} origin The origin of the node (optional).\n * @returns {object} A result object {name, origin, raw, data}.\n */\nfunction parsePs37Node(partNode, origin) {\n  let tags37 = [];\n  // 0000: command\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part07/chapter_E.html#table_E.1-1\n  tags37 = tags37.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_E.1-1')),\n    partNode,\n    'Command Fields'));\n  // 0000: command (retired)\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part07/sect_E.2.html#table_E.2-1\n  tags37 = tags37.concat(parseTagsTableNode(\n    partNode.querySelector(getSelector('table_E.2-1')),\n    partNode,\n    'Retired Command Fields'));\n\n  return {\n    name: 'DICOM tags group 0000',\n    origin: origin,\n    raw: tags37,\n    data: stringifyTags(adaptTagsForDwv(tags37))\n  };\n}\n\n/**\n * Get a selector for an element with the input xml:id.\n * Looking for:\n * - <table label=\"l\"> when the id starts with 'table_'\n * - <section label=\"l\"> when the id starts with 'sect_'\n *\n * @param {string} xmlid The id to look for.\n * @returns {string} The selector.\n */\nfunction getSelector(xmlid) {\n  let prefix = '';\n  if (xmlid.startsWith('table_')) {\n    prefix = 'table[label=\\'' + xmlid.substring(6);\n  } else if (xmlid.startsWith('sect_')) {\n    prefix = 'section[label=\\'' + xmlid.substring(5);\n  } else {\n    throw new Error('Unknown xml:id format.');\n  }\n  return prefix + '\\']';\n}\n\n/**\n * Get the 'linkend' value (an xml:id) of an input string.\n * Looking for: <xref linkend=\"sect_C.1-7\">\n *\n * @param {string} str The input string.\n * @returns {string} The xml:id.\n */\nfunction getLinkend(str) {\n  const regex = /linkend=\"(.+?)\"/g;\n  const matches = [...str.matchAll(regex)];\n  // return first result\n  if (matches.length === 0 || matches[0].length !== 2) {\n    throw new Error('Cannot find linkend value in: ' + str);\n  }\n  return matches[0][1];\n}\n\n/**\n * Extract enum values from a string\n * (created by parseVariableListNode).\n *\n * @param {string} str The string to extract the enum from.\n * @returns {object} An object containing the input string ('str')\n *   either in full or without the enum if found and\n *   the enum ('enum') if found.\n */\nfunction extractEnum(str) {\n  let result = {str: str};\n\n  // looks like: 'enum=ITEM0,ITEM1;'\n  const start = str.indexOf('enum=');\n  if (start !== -1) {\n    const end = str.indexOf(';');\n    if (end === -1) {\n      throw new Error('Badly formed enum');\n    }\n    // remove enum from input\n    const desc = str.substring(0, start) +\n      str.substring(end, str.length - 1);\n    result.str = desc.trim();\n    // store enum as array\n    result.enum = str.substring(start + 5, end).split(',');\n  }\n\n  return result;\n}\n\n/**\n * Extract condition arguments from a string.\n *\n * @param {string} str The string to extract the condition from.\n * @returns {object} An object containing the input string ('str')\n *   either in full or without the condition if found and\n *   the condition ('condition') if found.\n */\nfunction extractCondition(str) {\n  let result = {str: str};\n\n  const reqIndex = str.indexOf('Required if');\n  if (reqIndex !== -1) {\n    let gotConditionMatch = false;\n    // 'Required if Context Identifier (0008,010F) is present.'\n    const regex = /Required if ([\\w\\s]+) (\\([\\dA-F]{4},[\\dA-F]{4}\\)) ([\\w\\s]+)\\./g;\n    const matches = [...str.matchAll(regex)];\n    if (matches.length !== 0 && matches[0].length === 4) {\n      if (matches[0][3] === 'is present' ||\n        matches[0][3] === 'is not present' ||\n        matches[0][3].startsWith('has a value') ||\n        matches[0][3].startsWith('is')) {\n        gotConditionMatch = true;\n        // condition without first match element\n        result.condition = matches[0].slice(1);\n        // remove condition from input\n        result.str = str.replace(matches[0][0], '');\n      }\n    }\n\n    if (!gotConditionMatch) {\n      // condition\n      result.condition = str.substring(reqIndex);\n      // console.log('Cannot extract condition from: ', result.condition);\n      // remove condition from input\n      result.str = str.substring(0, reqIndex);\n    }\n  }\n  return result;\n}\n\n/**\n * Get a compare function for a specific object property.\n *\n * @param {string} property The object property to sort by.\n * @returns {Function} A compare function.\n */\nfunction getCompare(property) {\n  return function (a, b) {\n    if (a[property] < b[property]) {\n      return -1;\n    }\n    if (a[property] > b[property]) {\n      return 1;\n    }\n    return 0;\n  };\n}\n\n/**\n * Get a multi compare function for a list of object properties.\n *\n * @param {Array} properties The list of object properties to sort by.\n * @returns {Function} A compare function.\n */\nfunction getMultiCompare(properties) {\n  return function (a, b) {\n    let res = null;\n    for (let i = 0; i < properties.length; ++i) {\n      res = getCompare(properties[i])(a, b);\n      // if result is not zero, exit\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Parse a DICOM standard XML table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string|undefined} expectedCaption Optional expected table caption.\n * @returns {Array} The table property values.\n */\nfunction parseTableNode(tableNode, partNode, expectedCaption) {\n  // check node\n  if (!tableNode) {\n    throw new Error('No table node.');\n  }\n  // check caption\n  if (typeof expectedCaption !== 'undefined') {\n    checkNodeCaption(tableNode, expectedCaption);\n  }\n  // parse node rows\n  const properties = [];\n  const nodes = tableNode.querySelectorAll('tbody > tr');\n  if (nodes) {\n    for (const node of nodes) {\n      properties.push(parseTrNode(node, partNode));\n    }\n  }\n  return properties;\n}\n\n/**\n * Check a node caption.\n *\n * @param {Node} node A DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {boolean} isEqualCheck Bool to perform equal or include\n *   caption text check.\n */\nfunction checkNodeCaption(node, expectedCaption, isEqualCheck) {\n  if (typeof isEqualCheck === 'undefined') {\n    isEqualCheck = true;\n  }\n  const captions = node.getElementsByTagName('caption');\n  if (!captions) {\n    throw new Error('No node caption.');\n  }\n  if (captions.length === 0) {\n    throw new Error('Empty node caption.');\n  }\n  const text = captions[0].innerHTML;\n  if (isEqualCheck) {\n    if (text !== expectedCaption) {\n      if (text.toLowerCase() === expectedCaption.toLowerCase()) {\n        console.warn('Accepting caption with different case: ' +\n          expectedCaption);\n      } else {\n        throw new Error(\n          'The node caption is not the expected one: ' +\n          expectedCaption + ' != ' + text);\n      }\n    }\n  } else {\n    if (!text.includes(expectedCaption)) {\n      throw new Error(\n        'The node caption does not include the expected one: ' +\n        expectedCaption + ' != ' + text);\n    }\n  }\n}\n\n/**\n * Parse a DICOM standard XML table row node.\n *\n * @param {Node} trNode A DOM row node.\n * @param {Node} partNode The main DOm node.\n * @returns {Array} The row property values.\n */\nfunction parseTrNode(trNode, partNode) {\n  const properties = [];\n  const nodes = trNode.querySelectorAll('td');\n  if (nodes) {\n    for (const node of nodes) {\n      properties.push(parseTdNode(node, partNode));\n    }\n  }\n  // return\n  return properties;\n}\n\n/**\n * Parse a DICOM standard XML table row cell node.\n *\n * @param {Node} tdNode A DOM cell node.\n * @param {Node} partNode The main DOM node.\n * @returns {Array} The cell property values.\n */\nfunction parseTdNode(tdNode, partNode) {\n  const properties = [];\n  const nodes = tdNode.childNodes;\n  if (nodes) {\n    for (const node of nodes) {\n      // type 1 (elements) to avoid #text between elements\n      if (node.nodeType === 1) {\n        if (node.nodeName === 'variablelist') {\n          properties.push(parseVariableListNode(node));\n        } else {\n          properties.push(parseContentNode(node, partNode));\n        }\n      }\n    }\n  }\n  // return\n  return properties;\n}\n\n/**\n * Parse a DICOM standard XML table row cell content node,\n * mainly para and note.\n *\n * @param {Node} paraNode A DOM para node.\n * @param {Node} partNode The main DOM node.\n * @returns {string} The para value.\n */\nfunction parseContentNode(paraNode, partNode) {\n  let content = '';\n  const nodes = paraNode.childNodes;\n  if (nodes) {\n    for (const node of nodes) {\n      if (node.nodeType === 1) {\n        // type 1: element\n        if (node.nodeName === 'xref') {\n          // just keep linkend for xref\n          content += 'linkend=\"' + node.attributes.linkend.value + '\"';\n        } else {\n          content += parseContentNode(node, partNode);\n        }\n      } else if (node.nodeType === 3) {\n        // type 3: text\n        content += node.textContent;\n      } else {\n        console.warn('Un-anticipated node:' + node);\n      }\n    }\n  }\n  // clean\n  content = cleanString(content);\n\n  // link to section with defined terms\n  // (for ex in module attributes description)\n  const regex = /See linkend=.+ for Defined Terms\\./g;\n  const match = content.match(regex);\n  if (match && match.length === 1) {\n    let foundTermsList = false;\n    const xmlid = getLinkend(content);\n    if (xmlid.startsWith('sect_')) {\n      const subSection = partNode.querySelector(getSelector(xmlid));\n      const nodes = subSection.childNodes;\n      if (nodes) {\n        for (const node of nodes) {\n          if (node.nodeName === 'variablelist') {\n            if (!foundTermsList) {\n              foundTermsList = true;\n              content = content.replace(match[0], parseVariableListNode(node));\n            } else {\n              console.warn('Multiple variable list for ' + xmlid);\n            }\n          }\n        }\n      }\n    }\n    if (!foundTermsList) {\n      console.warn('Did not find terms list with: ' + content);\n    }\n  }\n\n  // return\n  return content;\n}\n\n/**\n * Parse a DICOM standard XML VariableList node\n *\n * @param {Node} listNode A DOM list node.\n * @returns {string} The list values.\n */\nfunction parseVariableListNode(listNode) {\n  let content = 'enum=';\n  const listChilds = listNode.childNodes;\n  if (listChilds) {\n    for (const node of listChilds) {\n      if (node.nodeName === 'varlistentry') {\n        const entries = node.childNodes;\n        if (entries) {\n          for (const entryNode of entries) {\n            if (entryNode.nodeName === 'term') {\n              content += cleanString(entryNode.textContent) + ',';\n            }\n          }\n        }\n      }\n    }\n  }\n  // replace last comma with semicolon\n  return content.replace(/,$/, ';');\n}\n\n/**\n * Trim and get rid of new line and zero-width space.\n *\n * @param {string} str The input string.\n * @returns {string} The cleaned string.\n */\nfunction cleanString(str) {\n  return str.trim().replace(/\\n/g, '').replace(/\\u200B/g, '');\n}\n\n/**\n * Parse a DICOM standard XML tags table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @returns {Array} The list of DICOM tags objects.\n */\nfunction parseTagsTableNode(tableNode, partNode, expectedCaption) {\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const tags = [];\n  let tag = null;\n  for (const value of values) {\n    tag = tagPropertiesToObject(value);\n    if (tag) {\n      tags.push(tag);\n    }\n  }\n  return tags;\n}\n\n/**\n * Parse a DICOM standard XML UIDs table node.\n *\n * @param {Node} tableNode A DOM table node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {string} uidType The UID type.\n * @returns {object} The list of transfer syntax UIDs.\n */\nfunction parseUidTableNode(tableNode, partNode, expectedCaption, uidType) {\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const uids = {};\n  let uid = null;\n  for (const value of values) {\n    uid = uidPropertiesToObject(value, uidType);\n    if (uid) {\n      uids[uid.value] = uid.name;\n    }\n  }\n  return uids;\n}\n\n/**\n * Extract a string VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction stringVrTypeExtractor(str) {\n  let type;\n  if (str.startsWith('A string of characters') ||\n    str.startsWith('A character string') ||\n    str.startsWith('A concatenated date-time character string')) {\n    type = 'string';\n  }\n  return type;\n}\n\n/**\n * Extract an octet VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction octetVrTypeExtractor(str) {\n  let type;\n  // pre 2017 uses string and not stream...\n  if (str.startsWith('An octet-stream') ||\n    str.startsWith('A string of bytes')) {\n    type = 'Uint8';\n  }\n  return type;\n}\n\n/**\n * Extract a integer VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction intVrTypeExtractor(str) {\n  let type;\n  const regex = /(Signed|Unsigned) binary integer (\\d{2}) bits long/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 3) {\n    type = match[0][1] === 'Unsigned' ? 'Ui' : 'I';\n    type += 'nt' + match[0][2];\n  }\n  return type;\n}\n\n/**\n * Extract a float VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction floatVrTypeExtractor(str) {\n  let type;\n  const regex = /IEEE 754:1985 (\\d{2})-bit Floating Point Number/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Float' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Extract a word VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction wordVrTypeExtractor(str) {\n  let type;\n  // pre 2017 uses string and not stream...\n  const regex = /A (?:stream|string) of (\\d{2})-bit words/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Uint' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Extract a flaot word VR type for a string.\n *\n * @param {string} str Input string.\n * @returns {string|undefined} The type if found or undefined.\n */\nfunction floatWordVrTypeExtractor(str) {\n  let type;\n  const regex = /(\\d{2})-bit IEEE 754:1985 floating point words/g;\n  const match = [...str.matchAll(regex)];\n  if (match.length === 1 && match[0].length === 2) {\n    type = 'Uint' + match[0][1];\n  }\n  return type;\n}\n\n/**\n * Parse a VR 32bit VL DICOM standard XML node.\n *\n * @param {Node} tableNode The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption root.\n * @returns {Array} The list of VRs.\n */\nfunction parseVrTableNode(tableNode, partNode, expectedCaption) {\n  const values = parseTableNode(tableNode, partNode, expectedCaption);\n  const vrs = {};\n\n  const extractors = [\n    stringVrTypeExtractor,\n    octetVrTypeExtractor,\n    intVrTypeExtractor,\n    floatVrTypeExtractor,\n    wordVrTypeExtractor,\n    floatWordVrTypeExtractor\n  ];\n\n  for (const value of values) {\n    // 'short' VR name\n    let vrName = value[0][0];\n    // definition\n    let definition = value[1][0];\n    let type;\n    for (const extractor of extractors) {\n      type = extractor(definition);\n      // exit if found\n      if (typeof type !== 'undefined') {\n        break;\n      }\n    }\n    // log unknown types (typically AT and SQ)\n    if (typeof type === 'undefined') {\n      console.log('Unknown VR type for ' + vrName);\n    }\n    // store\n    vrs[vrName] = type;\n  }\n  return vrs;\n}\n\n/**\n * Parse a module list DICOM standard XML node:\n *   can be an IOD modules list or a functional group macros.\n *\n * @param {Node} node The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {string} usageRegex Optional usage selection regex.\n * @returns {Array} The list of IOD modules.\n */\nfunction parseModuleListNode(node, partNode, expectedCaption, usageRegex) {\n  const values = parseTableNode(node, partNode, expectedCaption);\n  const modules = [];\n  let module = null;\n  for (const value of values) {\n    module = moduleDefinitionPropertiesToObject(value, usageRegex);\n    if (module) {\n      modules.push(module);\n    }\n  }\n  return modules;\n}\n\n/**\n * Get modules from a modules definition list.\n *\n * @param {Array} list The IOD module list.\n * @param {Node} partNode The main DOM node.\n * @param {object} fgModulesProperties Optional functional group\n *   modules properties, undefined to parse a functional group.\n * @returns {Array} The modules array.\n */\nfunction parseModulesFromList(list, partNode, fgModulesProperties) {\n  const result = {};\n  for (const item of list) {\n    // TODO include usage and condition\n    const moduleName = item.module;\n    // get the module from the referenced section\n    const xmlid = getLinkend(item.reference);\n    const sectNode = partNode.querySelector(getSelector(xmlid));\n    for (const node of sectNode.childNodes) {\n      // stop at first table\n      if (node.nodeName === 'table') {\n        let name = moduleName;\n        if (typeof fgModulesProperties === 'undefined') {\n          name += ' Macro';\n        } else {\n          name += ' Module';\n        }\n        name += ' Attributes';\n        result[moduleName] =\n          parseModuleAttributesNode(node, partNode, name, fgModulesProperties);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nlet macros = {};\n\n/**\n * Parse a Information Entities (IE) modules DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @param {Node} partNode The main DOM node.\n * @param {string} expectedCaption The expected node caption.\n * @param {object} fgModules A list of functional group modules.\n * @returns {Array} The list of ....\n */\nfunction parseModuleAttributesNode(node, partNode, expectedCaption, fgModules) {\n  // expecting macro includes as: 'Include <xref linkend=\"table_10-18\"\n  //   xrefstyle=\"select: label quotedtitle\"/>'\n  const includeMacro = 'Include linkend=';\n  const includeFG = 'Include one or more Functional Group Macros';\n\n  const rows = parseTableNode(node, partNode, expectedCaption);\n  const result = [];\n  let startSq0 = false;\n  let startSq1 = false;\n  for (const row of rows) {\n    if (row.length === 0) {\n      const nodeCaptions = node.getElementsByTagName('caption');\n      if (nodeCaptions && nodeCaptions.length !== 0) {\n        console.warn('Empty module row in: ', nodeCaptions[0].innerHTML);\n      } else {\n        console.warn('Empty module row');\n      }\n      continue;\n    }\n    let attribute;\n    const attributeName = cleanString(row[0][0]);\n    let includeCase = false;\n\n    if (row.length === 4) {\n      // default: Attribute Name, Tag, Type, Attribute Description\n      attribute = [row];\n    } else if (attributeName.includes(includeMacro)) {\n      // include module macro\n      includeCase = true;\n      const xmlid = getLinkend(attributeName);\n      if (xmlid.startsWith('table_')) {\n        // store macro if not done yet\n        if (!macros[xmlid]) {\n          const subTable = partNode.querySelector(getSelector(xmlid));\n          macros[xmlid] =\n            parseModuleAttributesNode(subTable, partNode, undefined);\n        }\n        attribute = macros[xmlid];\n      }\n    } else if (attributeName.includes(includeFG)) {\n      // include functional group macro\n      includeCase = true;\n      attribute = [];\n      const keys = Object.keys(fgModules);\n      for (let key of keys) {\n        attribute = attribute.concat(fgModules[key]);\n      }\n    } else {\n      // avoid these rows\n      // code sequence: BASIC CODED ENTRY ATTRIBUTES, ENHANCED ENCODING MODE\n      if (attributeName !== 'BASIC CODED ENTRY ATTRIBUTES' &&\n        attributeName !== 'ENHANCED ENCODING MODE') {\n        console.warn('Unexpected row: \\'' + attributeName + '\\'');\n      }\n      continue;\n    }\n\n    // handle sequences\n    if (attributeName.startsWith('>')) {\n      // previous attribute (first level)\n      let previousAtt = result[result.length - 1];\n      // set flag and append array for first item\n      if (!startSq0) {\n        previousAtt.push([]);\n        startSq0 = true;\n      }\n      // remove '>' from name\n      if (!includeCase) {\n        attribute[0][0][0] = attribute[0][0][0].substring(1);\n      }\n\n      if (attributeName.startsWith('>>')) {\n        // previous attribute (second level)\n        previousAtt = previousAtt[4][previousAtt[4].length - 1];\n        // set flag and append array for first item\n        if (!startSq1) {\n          previousAtt.push([]);\n          startSq1 = true;\n        }\n      } else {\n        // reset second level flag\n        if (startSq1) {\n          startSq1 = false;\n        }\n      }\n      // append to previous attribute\n      previousAtt[4].push(...attribute);\n    } else if (attributeName.startsWith('>>>')) {\n      console.warn('Not expecting a triple \\'>\\'');\n    } else {\n      // reset first level flag\n      if (startSq0) {\n        startSq0 = false;\n      }\n      // reset second level flag\n      if (startSq1) {\n        startSq1 = false;\n      }\n      // append to result\n      result.push(...attribute);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Parse a VR 32bit VL DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @param {string} expectedCaptionRoot The expected node caption root.\n * @returns {Array} The list VRs.\n */\nfunction parseVrCaptionNode(node, expectedCaptionRoot) {\n  // check node\n  if (!node) {\n    throw new Error('No Vr caption node.');\n  }\n  // check caption\n  checkNodeCaption(node, expectedCaptionRoot, false);\n  // expecting something like:\n  // 'Data Element with Explicit VR of OB, OW, OF, OD, SQ, UT or UN'\n  const regex = /(?:\\s)([A-Z]{2})(?:,|\\sor|\\sand|$)/g;\n  const caption = node.getElementsByTagName('caption');\n  const text = caption[0].innerHTML;\n  const matches = text.matchAll(regex);\n  const result = [];\n  for (const match of matches) {\n    result.push(match[1]); // [0] includes non capturing groups\n  }\n  return result;\n}\n\n/**\n * Parse a Character Set VR DICOM standard XML node.\n *\n * @param {Node} node The content node.\n * @returns {Array} The list of VRs.\n */\nfunction parseCharSetVrNode(node) {\n  // check node\n  if (!node) {\n    throw new Error('No char Vr node.');\n  }\n\n  const result = [];\n\n  // expecting something like:\n  // For Data Elements with Value Representations of SH (Short String),\n  // LO (Long String), UC (Unlimited Characters), ST (Short Text),\n  // LT (Long Text), UT (Unlimited Text) or PN (Person Name)\n  const regex = /(?:\\s)([A-Z]{2})(?:\\s\\(\\w+\\s\\w+\\))/g;\n  const paras = node.getElementsByTagName('para');\n  for (const para of paras) {\n    if (para.innerHTML.startsWith(\n      'For Data Elements with Value Representations')) {\n      const text = para.innerHTML;\n      const matches = text.matchAll(regex);\n      for (const match of matches) {\n        result.push(match[1]); // [0] includes non capturing groups\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Parse tag values as array and return a tag object.\n *\n * @param {Array} properties A tag row array of properties (length=6).\n * @returns {object} A tag object: {group, element, keyword, vr, vm}.\n */\nfunction tagPropertiesToObject(properties) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 5 && properties.length !== 6) {\n    throw new Error(\n      'Not the expected tag properties size: ' + properties.length);\n  }\n  // split (group,element)\n  const geSplit = properties[0][0].split(',');\n  const group = '0x' + geSplit[0].substring(1, 5).toString();\n  const element = '0x' + geSplit[1].substring(0, 4).toString();\n  // return\n  return {\n    group: group,\n    element: element,\n    keyword: typeof properties[2][0] === 'undefined' ? '' : properties[2][0],\n    vr: typeof properties[3][0] === 'undefined' ? '' : properties[3][0],\n    vm: typeof properties[4][0] === 'undefined' ? '' : properties[4][0]\n  };\n}\n\n/**\n * Parse UID values as array and return a UID object.\n *\n * @param {Array} properties A UID row array of properties (length=6).\n * @param {string} uidType The UID type.\n * @returns {object} A tag object: {group, element, keyword, vr, vm}.\n */\nfunction uidPropertiesToObject(properties, uidType) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 4 && properties.length !== 5) {\n    throw new Error('Not the expected UID values size: ' + properties.length);\n  }\n  let uid = null;\n  // check UID type\n  // a 'UID keyword' column was added in 2020d, use len-2 instead of index\n  if (properties[properties.length - 2][0].includes(uidType)) {\n    uid = {\n      name: properties[1][0],\n      value: properties[0][0]\n    };\n  }\n  return uid;\n}\n\n\n/**\n * Objectify IOD modules properties.\n *\n * @param {Array} properties The IOD module properties.\n * @param {string} usageRegex Optional usage selection regex.\n * @returns {object} A IOD module object.\n */\nfunction moduleDefinitionPropertiesToObject(properties, usageRegex) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 3 && properties.length !== 4) {\n    throw new Error('Not the expected IOD module values size: ' +\n      properties.length);\n  }\n  // possible Information Entities (IE) extra first column\n  let startCol = 0;\n  if (properties.length === 4) {\n    startCol = 1;\n  }\n  let moduleDef = {\n    module: properties[startCol][0],\n    reference: properties[startCol + 1][0],\n    usage: properties[startCol + 2][0]\n  };\n\n  // get condition from usage\n  if (moduleDef.usage.startsWith('C - Required')) {\n    moduleDef.condition = moduleDef.usage.substring(4);\n    moduleDef.usage = 'C';\n  }\n\n  // Usage property:\n  // - M: Mandatory;\n  // - C: Conditional;\n  // - U: User Option;\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part03/chapter_A.html#sect_A.1.3\n  if (moduleDef.usage !== 'M' && moduleDef.usage !== 'C' &&\n    moduleDef.usage !== 'U') {\n    console.warn('Unexpected IOD module usage: ' + moduleDef.usage);\n  }\n\n  // usage filter\n  if (typeof usageRegex !== 'undefined' &&\n    moduleDef.usage.match(usageRegex) === null) {\n    return null;\n  }\n\n  return moduleDef;\n}\n\n/**\n * Objectify modules properties.\n *\n * @param {Array} properties The module properties.\n * @param {string} typeRegex Optional type selection regex.\n * @returns {object} A module object.\n */\nfunction modulePropertiesListToObject(properties, typeRegex) {\n  const keys = Object.keys(properties);\n  const result = {};\n  for (const key of keys) {\n    const modules = [];\n    for (const mod of properties[key]) {\n      const module = modulePropertiesToObject(mod, typeRegex);\n      if (module) {\n        modules.push(module);\n      }\n    }\n    if (modules.length !== 0) {\n      result[key] = modules;\n    }\n  }\n  return result;\n}\n\n/**\n * Objectify modules properties.\n *\n * @param {Array} properties The module properties.\n * @param {string} typeRegex Optional type selection regex.\n * @returns {object} A module object.\n */\nfunction modulePropertiesToObject(properties, typeRegex) {\n  // check length (then only use the first element of each item)\n  if (properties.length !== 4 && properties.length !== 5) {\n    throw new Error('Not the expected module values size: ' +\n      properties.length);\n  }\n  let module = {\n    name: properties[0][0],\n    tag: properties[1][0],\n    type: properties[2][0]\n  };\n\n  // Type property:\n  // - 1: Required; 1C: Type 1 with condition;\n  // - 2: Required, Empty if Unknown; 2C: Type 2 with condition;\n  // - 3: Optional\n  // https://dicom.nema.org/medical/dicom/current/output/chtml/part05/sect_7.4.html\n  if (module.type !== '1' && module.type !== '1C' &&\n    module.type !== '2' && module.type !== '2C' &&\n    module.type !== '3') {\n    console.warn('Unexpected module type: ' + module.type);\n  }\n\n  // type filter\n  if (typeof typeRegex !== 'undefined' &&\n    module.type.match(typeRegex) === null) {\n    return null;\n  }\n\n  // description\n  let desc = '';\n  for (let i = 0; i < properties[3].length; ++i) {\n    // extract enum\n    const extract0 = extractEnum(properties[3][i]);\n    if (typeof extract0.enum !== 'undefined') {\n      module.enum = extract0.enum;\n    }\n    if (extract0.str.length !== 0) {\n      // extract condition\n      const extract1 = extractCondition(extract0.str);\n      if (typeof extract1.condition !== 'undefined') {\n        module.condition = extract1.condition;\n      }\n      // keep what's left\n      if (extract1.str.length !== 0) {\n        if (i !== 0) {\n          desc += ' ';\n        }\n        desc += extract1.str;\n      }\n    }\n  }\n  module.desc = desc;\n\n  // include\n  if (properties.length === 5) {\n    module.items = [];\n    const subProperties = properties[4];\n    for (const subProps of subProperties) {\n      const subModule = modulePropertiesToObject(subProps, typeRegex);\n      if (subModule) {\n        module.items.push(subModule);\n      }\n    }\n  }\n\n  return module;\n}\n\n/**\n * Adapt tags:\n * - replace 'x' in groups and elements\n * - add GenericGroupLength to groups\n * - replace non single VRs\n *\n * @param {Array} inputTags An array of tags.\n * @returns {Array} The adapted tags as a new array.\n */\nfunction adaptTagsForDwv(inputTags) {\n  // check tags\n  if (!inputTags) {\n    throw new Error('No tags.');\n  }\n  if (inputTags.length === 0) {\n    throw new Error('Empty tags.');\n  }\n\n  /**\n   * Replace 'x's in groups and elements.\n   *\n   * @param {string} str The input string.\n   * @returns {string} The updated string.\n   */\n  function replaceXs(str) {\n    str = str.replace(/xxxxx/g, 'x0004');\n    str = str.replace(/xxxx/g, 'x001');\n    str = str.replace(/xx/g, '00');\n    return str;\n  }\n\n  // clone input\n  const tags = inputTags.slice();\n\n  // list groups\n  const groups = [];\n  for (let t = 0; t < tags.length; ++t) {\n    // replace 'x's\n    tags[t].group = replaceXs(tags[t].group);\n    tags[t].element = replaceXs(tags[t].element);\n    // list groups\n    const grp = tags[t].group;\n    if (!groups.includes(grp)) {\n      groups.push(grp);\n    }\n  }\n\n  // add GenericGroupLength to groups\n  for (const group of groups) {\n    if (group !== '0x0000' && group !== '0x0002') {\n      tags.push({\n        group: group,\n        element: '0x0000',\n        keyword: 'GenericGroupLength',\n        vr: 'UL',\n        vm: '1'\n      });\n    }\n  }\n\n  // sort tags\n  tags.sort(getMultiCompare(['group', 'element']));\n\n  // check VRs\n  for (let i = 0; i < tags.length; ++i) {\n    let vr = tags[i].vr;\n    if (typeof vr !== 'undefined') {\n      if (vr.length !== 2) {\n        if (vr.substring(0, 8) === 'See Note') {\n          // #modif \"See Note\" -> \"NONE\"\n          vr = 'NONE';\n        } else if (vr === 'OB or OW') {\n          // #modif \"OB or OW\" -> \"ox\"\n          vr = 'ox';\n        } else if (vr === 'US or SS') {\n          // #modif \"US or SS\" -> \"xs\"\n          vr = 'xs';\n        } else {\n          console.warn('Unknown VR: \\'' + vr +\n            '\\' for ' + tags[i].group + ',' + tags[i].element);\n        }\n      }\n    } else {\n      vr = '';\n    }\n    tags[i].vr = vr;\n  }\n\n  return tags;\n}\n\n/**\n * Adapt UIDs:\n * - replace '&amp;' in name with '&'\n * - remove comments in name: string after ':'\n *\n * @param {object} inputUids An list of UIDs.\n * @returns {object} The adapted UIDs as a new list.\n */\nfunction adaptUidsForDwv(inputUids) {\n  const keys = Object.keys(inputUids);\n  for (const key of keys) {\n    let name = inputUids[key];\n    // replace '&amp'\n    if (name.includes('&amp;')) {\n      name = name.replace('&amp;', '&');\n      inputUids[key] = name;\n    }\n    // remove comment\n    if (name.includes(':')) {\n      const pos = name.indexOf(':');\n      inputUids[key] = name.substring(0, pos);\n    }\n  }\n\n  return inputUids;\n}\n\n/**\n * Stringify a tags array.\n *\n * @param {Array} tags The tags array.\n * @returns {string} A stringified version of the input array.\n */\nfunction stringifyTags(tags) {\n  // check tags\n  if (!tags) {\n    throw new Error('No tags.');\n  }\n  if (tags.length === 0) {\n    throw new Error('Empty tags.');\n  }\n\n  // tabulation\n  const tab = '  ';\n  const quote = '\\'';\n  // result text\n  let text = '{\\n';\n\n  let group = '';\n  for (let i = 0; i < tags.length; ++i) {\n    const tag = tags[i];\n    let isFirstOfgroup = false;\n    // start group section\n    if (tag.group !== group) {\n      isFirstOfgroup = true;\n      // close previous\n      if (i !== 0) {\n        text += '\\n' + tab + '},\\n';\n      }\n      // start new\n      group = tag.group;\n      text += tab + quote + tag.group + quote + ': {\\n';\n    }\n\n    // tag\n    let tagText = isFirstOfgroup ? '' : ',\\n';\n    tagText += tab + tab +\n      quote + tag.element + quote + ': [' +\n      quote + tag.vr + quote + ', ' +\n      quote + tag.vm + quote + ', ' +\n      quote + tag.keyword + quote + ']';\n    text += tagText;\n  }\n\n  // last group line\n  text += '\\n' + tab + '}\\n';\n  // last line\n  text += '}\\n';\n\n  return text;\n}\n","// DICOM versions object\n// (only those published with this repo since NEMA does not do CORS...)\nconst dicomVersions = {\n  '2016': ['a'],\n  '2018': ['a'],\n  '2020': ['a'],\n  '2022': ['a'],\n};\n\n// Supported DICOM parts\nconst dicomParts = ['03', '05', '06', '07'];\n\n/**\n * Get the list of DICOM standard parts.\n *\n * @returns {Array} An array of parts\n */\nexport function getDicomParts() {\n  return dicomParts;\n}\n\n/**\n * Get the list of DICOM standard versions.\n *\n * @returns {Array} An array of versions, ordered from most recent to older.\n */\nexport function getDicomVersions() {\n  const keys = Object.keys(dicomVersions);\n  keys.sort(compare);\n  // create version strings\n  const versions = [];\n  for (let i = 0; i < keys.length; ++i) {\n    const majorVersion = keys[i];\n    const minorVersions = dicomVersions[majorVersion];\n    for (let j = 0; j < minorVersions.length; ++j) {\n      versions.push(majorVersion + minorVersions[j]);\n    }\n  }\n  // return\n  return versions;\n}\n\n/**\n * Sort keys.\n *\n * @param {string} a First string.\n * @param {string} b Second string.\n * @returns {number} Negative is a > b.\n */\nfunction compare(a, b) {\n  return parseInt(b, 10) - parseInt(a, 10);\n}\n\n/**\n * Get a list of DICOM versions associated to their resrouce link.\n *\n * @param {string} partNumber The part number as a string.\n * @returns {Array} An array of {xml, html} objects.\n */\nexport function getDicomPartLinks(partNumber) {\n  const versions = getDicomVersions();\n  const links = {};\n  for (let i = 0; i < versions.length; ++i) {\n    links[versions[i]] = {\n      'xml': getXmlLink(versions[i], partNumber),\n      'html': getHtmlLink(versions[i], partNumber),\n    };\n  }\n  // return\n  return links;\n}\n\n/**\n * Get the xml link to the standard.\n * Links go to github since nema does not publish standard with CORS\n *\n * @param {string} version The standard version.\n * @param {string} partNumber The standard part number as a string.\n * @returns {string} The full link to the desired file.\n */\nfunction getXmlLink(version, partNumber) {\n  const githubRoot = 'https://raw.githubusercontent.com/ivmartel/dcmStdToJs/main/resources/standard';\n  const partFileName = 'part' + partNumber;\n  return githubRoot + '/' + version + '/' + partFileName + '.xml';\n}\n\n/**\n * Get the html link to the standard.\n *\n * @param {string} version The standard version.\n * @param {string} partNumber The standard part number as a string.\n * @returns {string} The full link to the desired html.\n */\nfunction getHtmlLink(version, partNumber) {\n  const nemaRoot = 'http://dicom.nema.org/medical/dicom';\n  const partFileName = 'part' + partNumber;\n  return nemaRoot + '/' + version + '/output/html/' + partFileName + '.html';\n}\n","import {DicomXMLParser} from './parser.js';\nimport * as nema from './nema.js';\n\n/**\n * GUI classe.\n */\nexport class Gui {\n  /**\n   * Setup the gui: bind parse button.\n   */\n  setup() {\n    document.getElementById('parseButton').addEventListener(\n      'click', onParseButtonClick);\n    document.getElementById('fileupload').addEventListener(\n      'change', onFileuploadChange);\n  }\n\n  /**\n   * DOMContentLoaded handler: update the version select.\n   */\n  onDOMContentLoaded() {\n    updateStandardSelect();\n  }\n}\n\n/**\n * Set the progress of the progressbar.\n *\n * @param {Event} event A progress event.\n */\nfunction setProgress(event) {\n  const progressBar = document.getElementById('progressBar');\n  if (event.lengthComputable) {\n    progressBar.max = event.total;\n    progressBar.value = event.loaded;\n  }\n}\n\n/**\n * Handle file upload change event.\n *\n * @param {Event} event The file upload change event.\n */\nfunction onFileuploadChange(event) {\n  // enable / disable parse button if files were selected\n  const parseButton = document.getElementById('parseButton');\n  if (event.target.files.length !== 0) {\n    parseButton.disabled = false;\n  } else {\n    parseButton.disabled = true;\n  }\n}\n\n/**\n * Handle parse button click event.\n *\n * @param {Event} event The parse button click event.\n */\nfunction onParseButtonClick(event) {\n  const button = event.target;\n\n  // reset progress\n  setProgress({loaded: 0, total: 100, lengthComputable: true});\n\n  // disable button\n  button.disabled = true;\n\n  // clear output zone\n  const outputDiv = document.getElementById('output');\n  outputDiv.innerHTML = '';\n\n  const parser = new DicomXMLParser();\n\n  // parse file if provided, parse link otherwise\n  const fileInputElement = document.getElementById('fileupload');\n  if (fileInputElement.files.length === 1) {\n    const file = fileInputElement.files[0];\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      // enable button\n      button.disabled = false;\n      // show tags\n      const domParser = new DOMParser();\n      const doc = domParser.parseFromString(\n        event.target.result, 'application/xml');\n      try {\n        showResult(parser.parseNode(doc, file.name));\n      } catch (error) {\n        showError(error);\n      }\n    };\n    reader.onprogress = setProgress;\n    reader.onloadend = setProgress;\n    reader.onerror = function () {\n      showError('ERROR while loading data, see log for details...');\n    };\n    reader.readAsText(file);\n  } else {\n    // use selected version or default\n    const dicomVersionsSelect = document.getElementById('dicomVersions');\n    let selectedVersion = dicomVersionsSelect.options[\n      dicomVersionsSelect.selectedIndex\n    ].value;\n    const dicomPartsSelect = document.getElementById('dicomParts');\n    let selectedPart = dicomPartsSelect.options[\n      dicomPartsSelect.selectedIndex\n    ].value;\n\n    const url = nema.getDicomPartLinks(selectedPart)[selectedVersion].xml;\n    const request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'document';\n    request.overrideMimeType('text/xml'); // force xml\n    request.onload = function (event) {\n      // enable button\n      button.disabled = false;\n      // show tags\n      try {\n        showResult(parser.parseNode(event.target.response, url));\n      } catch (error) {\n        showError(error);\n      }\n    };\n    request.onprogress = setProgress;\n    request.onloadend = setProgress;\n    request.onerror = function () {\n      showError('ERROR while retrieving data, see log for details...');\n    };\n    request.send();\n  }\n}\n\n/**\n * Format a parse result into a html element and append it to the 'output' div.\n *\n * @param {Array} result A parse result object array.\n */\nfunction showResult(result) {\n  // append to page as text area\n  if (Array.isArray(result)) {\n    for (let i = 0; i < result.length; ++i) {\n      appendResult('result-' + i, result[i]);\n    }\n  } else {\n    appendResult('result-0', result);\n  }\n}\n\n/**\n * Show an error result.\n *\n * @param {string|Event} error The error to display.\n */\nfunction showError(error) {\n  console.error(error);\n  let message = error;\n  if (typeof error.message !== 'undefined') {\n    message = error.message;\n  }\n  appendResult('error', message);\n}\n\n/**\n * Append a text area to the ouput div.\n *\n * @param {string} name The name of text area.\n * @param {object} content The result content.\n */\nfunction appendResult(name, content) {\n  const div = document.getElementById('output');\n  let contentString = '';\n\n  if (typeof content.name !== 'undefined') {\n    const para = document.createElement('p');\n    let numberOfItems;\n    if (Array.isArray(content.raw)) {\n      numberOfItems = content.raw.length;\n    } else {\n      numberOfItems = Object.keys(content.raw).length;\n    }\n    para.appendChild(document.createTextNode(\n      content.name +\n      ' (' + content.origin +\n      ', ' + numberOfItems + ' items) '\n    ));\n\n    const link = document.createElement('a');\n    link.download = 'result.json';\n    const blob = new Blob([content.data], {type: 'text/plain'});\n    link.href = window.URL.createObjectURL(blob);\n    link.appendChild(document.createTextNode('download'));\n\n    para.appendChild(link);\n    div.appendChild(para);\n\n    contentString = content.data;\n  } else {\n    contentString = content;\n  }\n\n  const area = document.createElement('textarea');\n  area.id = name;\n  area.appendChild(document.createTextNode(contentString));\n  area.spellcheck = false;\n  if (name.includes('error')) {\n    area.className = 'error';\n  } else {\n    area.rows = 20;\n  }\n\n  div.appendChild(area);\n}\n\n/**\n * Update standard select with available standard versions\n */\nfunction updateStandardSelect() {\n  const versionSelect = document.getElementById('dicomVersions');\n\n  // place holder option\n  let versionOption = document.createElement('option');\n  versionOption.disabled = true;\n  versionOption.selected = true;\n  versionOption.text = 'Select a version';\n  versionOption.value = '';\n  versionSelect.add(versionOption);\n  // version options\n  const versions = nema.getDicomVersions();\n  for (let i = 0; i < versions.length; ++i) {\n    versionOption = document.createElement('option');\n    versionOption.text = versions[i];\n    versionOption.value = versions[i];\n    versionSelect.add(versionOption);\n  }\n\n  const partSelect = document.getElementById('dicomParts');\n\n  // place holder option\n  let partOption = document.createElement('option');\n  partOption.disabled = true;\n  partOption.selected = true;\n  partOption.text = 'Select a part';\n  partOption.value = '';\n  partSelect.add(partOption);\n  // part options\n  const parts = nema.getDicomParts();\n  for (let i = 0; i < parts.length; ++i) {\n    partOption = document.createElement('option');\n    partOption.text = parts[i];\n    partOption.value = parts[i];\n    partSelect.add(partOption);\n  }\n\n  const parseButton = document.getElementById('parseButton');\n\n  // update associated links on select change\n  versionSelect.onchange = function (event) {\n    const part = partSelect[partSelect.selectedIndex].value;\n    if (part !== '') {\n      updateVersionLinks(event.target.value, part);\n      parseButton.disabled = false;\n    }\n  };\n  partSelect.onchange = function (event) {\n    const version = versionSelect[versionSelect.selectedIndex].value;\n    if (version !== '') {\n      updateVersionLinks(version, event.target.value);\n      parseButton.disabled = false;\n    }\n  };\n}\n\n/**\n * Update the version links.\n *\n * @param {string} version The dicom standard version.\n * @param {string} partNumber The standard part number\n */\nfunction updateVersionLinks(version, partNumber) {\n  const links = nema.getDicomPartLinks(partNumber)[version];\n  // xml standard link\n  const xmlLink = document.createElement('a');\n  xmlLink.href = links.xml;\n  xmlLink.appendChild(document.createTextNode('xml'));\n  // html standard link\n  const htmlLink = document.createElement('a');\n  htmlLink.href = links.html;\n  htmlLink.appendChild(document.createTextNode('html'));\n\n  const versionLinks = document.getElementById('versionLinks');\n  // clear\n  versionLinks.innerHTML = '';\n  // add new links\n  versionLinks.appendChild(document.createTextNode('(dict: '));\n  versionLinks.append(xmlLink);\n  versionLinks.appendChild(document.createTextNode(', '));\n  versionLinks.append(htmlLink);\n  versionLinks.appendChild(document.createTextNode(')'));\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import {Gui} from './gui.js';\nimport './style.css';\n\n// setup\nconst gui = new Gui();\ngui.setup();\ngui.onDOMContentLoaded();"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","DicomXMLParser","_classCallCheck","value","partNode","origin","book","label","getAttribute","subtitle","prefix","innerHTML","startsWith","endIndex","indexOf","versionStr","substring","trim","version","year","parseInt","letter","_iodList","name","iod","usageRegex","fgModulesProperties","fgLabel","parseModulesFromList","parseModuleListNode","getSelector","modulePropertiesListToObject","raw","parsePs33Node","vrs","tableNode","expectedCaption","_step10","extractors","stringVrTypeExtractor","octetVrTypeExtractor","intVrTypeExtractor","floatVrTypeExtractor","wordVrTypeExtractor","floatWordVrTypeExtractor","_iterator10","_createForOfIteratorHelper","parseTableNode","parseVrTableNode","s","done","_step11","vrName","type","_iterator11","extractor","err","f","console","log","vrsNames","keys","vrsResult","isBefore2019e","xmlid","specialVrs","node","expectedCaptionRoot","checkNodeCaption","_step16","_iterator16","getElementsByTagName","matchAll","match","parseVrCaptionNode","vrVl32s","filter","includes","vrVl32Result","charSetVrs","_step17","regex","_iterator17","para","_step18","_iterator18","parseCharSetVrNode","parsePs35Node","tags36","tagsResults","parseTagsTableNode","stringifyTags","adaptTagsForDwv","uids","parseUidTableNode","uidsResults","adaptUidsForDwv","sops","parsePs36Node","tags37","parsePs37Node","getLinkend","str","matches","_toConsumableArray","extractEnum","start","end","desc","enum","split","extractCondition","reqIndex","gotConditionMatch","condition","slice","replace","getCompare","property","b","properties","nodes","querySelectorAll","_step","_iterator","parseTrNode","isEqualCheck","captions","text","toLowerCase","warn","trNode","_step2","_iterator2","parseTdNode","tdNode","childNodes","_step3","_iterator3","nodeType","nodeName","parseVariableListNode","parseContentNode","paraNode","_step4","_iterator4","linkend","textContent","cleanString","foundTermsList","_step5","_iterator5","listNode","listChilds","_step6","_iterator6","entries","_step7","_iterator7","entryNode","_step8","tags","tag","_iterator8","tagPropertiesToObject","uidType","_step9","uid","_iterator9","uidPropertiesToObject","_step12","_iterator12","moduleDefinitionPropertiesToObject","_step13","_iterator13","_step14","moduleName","reference","_iterator14","parseModuleAttributesNode","macros","fgModules","_step15","startSq0","startSq1","_iterator15","row","attribute","attributeName","includeCase","subTable","_i2","_keys","_previousAtt$","previousAtt","nodeCaptions","geSplit","group","keyword","vr","vm","startCol","moduleDef","usage","typeRegex","_i3","_keys2","_step19","_iterator19","modulePropertiesToObject","extract0","extract1","items","_step20","_iterator20","subModule","inputTags","replaceXs","groups","t","grp","_i4","_groups","sort","res","inputUids","_i5","_keys3","pos","tab","quote","isFirstOfgroup","tagText","dicomVersions","dicomParts","getDicomVersions","compare","versions","majorVersion","minorVersions","j","getDicomPartLinks","partNumber","links","getXmlLink","getHtmlLink","githubRoot","nemaRoot","Gui","getElementById","addEventListener","onParseButtonClick","onFileuploadChange","versionSelect","versionOption","disabled","selected","add","nema","partSelect","partOption","parts","parseButton","onchange","event","part","selectedIndex","updateVersionLinks","updateStandardSelect","setProgress","progressBar","lengthComputable","max","total","loaded","files","button","parser","fileInputElement","file","reader","FileReader","onload","doc","DOMParser","parseFromString","showResult","parseNode","error","showError","onprogress","onloadend","onerror","readAsText","dicomVersionsSelect","selectedVersion","dicomPartsSelect","url","xml","request","XMLHttpRequest","open","responseType","overrideMimeType","response","send","Array","isArray","appendResult","message","div","contentString","numberOfItems","link","download","blob","Blob","href","URL","createObjectURL","area","spellcheck","className","rows","xmlLink","htmlLink","html","versionLinks","append","gui","setup","onDOMContentLoaded"],"sourceRoot":""}